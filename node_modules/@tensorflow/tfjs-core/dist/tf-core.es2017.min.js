/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).tf=e.tf||{})}(this,(function(e){"use strict";class t{time(e){return n("time")}read(e){return n("read")}readSync(e){return n("readSync")}numDataIds(){return n("numDataIds")}disposeData(e){return n("disposeData")}write(e,t,r){return n("write")}move(e,t,r,o){return n("move")}memory(){return n("memory")}floatPrecision(){return n("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,r,o){return n("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:r,transposeB:o,bias:s,activation:a,preluActivationWeights:i}){return n("fusedBatchMatMul")}slice(e,t,r){return n("slice")}stridedSlice(e,t,r,o){return n("stridedSlice")}unstack(e,t){return n("unstack")}reverse(e,t){return n("reverse")}concat(e,t){return n("concat")}neg(e){return n("neg")}add(e,t){return n("add")}addN(e){return n("addN")}subtract(e,t){return n("subtract")}multiply(e,t){return n("multiply")}realDivide(e,t){return n("realDivide")}floorDiv(e,t){return n("floorDiv")}sum(e,t){return n("sum")}prod(e,t){return n("prod")}unsortedSegmentSum(e,t,r){return n("unsortedSegmentSum")}argMin(e,t){return n("argMin")}argMax(e,t){return n("argMax")}equal(e,t){return n("equal")}notEqual(e,t){return n("notEqual")}less(e,t){return n("less")}lessEqual(e,t){return n("lessEqual")}greater(e,t){return n("greater")}greaterEqual(e,t){return n("greaterEqual")}logicalNot(e){return n("logicalNot")}logicalAnd(e,t){return n("logicalAnd")}logicalOr(e,t){return n("logicalOr")}where(e){return n("where")}select(e,t,r){return n("select")}topk(e,t,r){return n("topk")}min(e,t){return n("min")}minimum(e,t){return n("minimum")}mod(e,t){return n("mod")}max(e,t){return n("max")}maximum(e,t){return n("maximum")}all(e,t){return n("all")}any(e,t){return n("any")}squaredDifference(e,t){return n("squaredDifference")}ceil(e){return n("ceil")}floor(e){return n("floor")}round(e){return n("round")}sign(e){return n("sign")}isNaN(e){return n("isNaN")}isInf(e){return n("isInf")}isFinite(e){return n("isFinite")}pow(e,t){return n("pow")}exp(e){return n("exp")}expm1(e){return n("expm1")}softmax(e,t){return n("softmax")}log(e){return n("log")}log1p(e){return n("log1p")}sqrt(e){return n("sqrt")}rsqrt(e){return n("rsqrt")}square(e){return n("square")}reciprocal(e){return n("reciprocal")}relu(e){return n("relu")}relu6(e){return n("relu6")}prelu(e,t){return n("prelu")}elu(e){return n("elu")}eluDer(e,t){return n("eluDer")}selu(e){return n("selu")}int(e){return n("int")}clip(e,t,r){return n("clip")}abs(e){return n("abs")}complexAbs(e){return n("complexAbs")}sigmoid(e){return n("sigmoid")}softplus(e){return n("softplus")}sin(e){return n("sin")}cos(e){return n("cos")}tan(e){return n("tan")}asin(e){return n("asin")}acos(e){return n("acos")}atan(e){return n("atan")}atan2(e,t){return n("atan2")}sinh(e){return n("sinh")}cosh(e){return n("cosh")}tanh(e){return n("tanh")}asinh(e){return n("asinh")}acosh(e){return n("acosh")}atanh(e){return n("atanh")}erf(e){return n("erf")}step(e,t){return n("step")}fusedConv2d({input:e,filter:t,convInfo:r,bias:o,activation:s,preluActivationWeights:a}){return n("fusedConv2d")}conv2d(e,t,r){return n("conv2d")}conv2dDerInput(e,t,r){return n("conv2dDerInput")}conv2dDerFilter(e,t,r){return n("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:r,bias:o,activation:s,preluActivationWeights:a}){return n("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,r){return n("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,r){return n("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,r){return n("depthwiseConv2DDerFilter")}conv3d(e,t,r){return n("conv3d")}conv3dDerInput(e,t,r){return n("conv3dDerInput")}conv3dDerFilter(e,t,r){return n("conv3dDerFilter")}maxPool(e,t){return n("maxPool")}maxPoolBackprop(e,t,r,o){return n("maxPoolBackprop")}avgPool(e,t){return n("avgPool")}avgPoolBackprop(e,t,r){return n("avgPoolBackprop")}avgPool3d(e,t){return n("avgPool3d")}avgPool3dBackprop(e,t,r){return n("avgPool3dBackprop")}maxPool3d(e,t){return n("maxPool3d")}maxPool3dBackprop(e,t,r,o){return n("maxPool3dBackprop")}reshape(e,t){return n("reshape")}cast(e,t){return n("cast")}tile(e,t){return n("tile")}pad(e,t,r){return n("pad")}transpose(e,t){return n("transpose")}gather(e,t,r){return n("gather")}gatherND(e,t){return n("gatherND")}scatterND(e,t,r){return n("scatterND")}batchToSpaceND(e,t,r){return n("batchToSpaceND")}spaceToBatchND(e,t,r){return n("spaceToBatchND")}resizeBilinear(e,t,r,o){return n("resizeBilinear")}resizeBilinearBackprop(e,t,r){return n("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,r,o){return n("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,r){return n("resizeNearestNeighborBackprop")}batchNorm(e,t,r,o,s,a){return n("batchNorm")}localResponseNormalization4D(e,t,r,o,s){return n("localResponseNormalization4D")}LRNGrad(e,t,r,o,s,a,i){return n("LRNGrad")}multinomial(e,t,r,o){return n("multinomial")}oneHot(e,t,r,o){return n("oneHot")}cumsum(e,t,r,o){return n("cumsum")}nonMaxSuppression(e,t,r,o,s){return n("nonMaxSuppression")}fft(e){return n("fft")}ifft(e){return n("ifft")}complex(e,t){return n("complex")}real(e){return n("real")}imag(e){return n("imag")}cropAndResize(e,t,r,o,s,a){return n("cropAndResize")}depthToSpace(e,t,r){return n("depthToSpace")}split(e,t,r){return n("split")}sparseToDense(e,t,r,o){return n("sparseToDense")}diag(e){return n("diag")}fill(e,t,r){return n("fill")}onesLike(e){return n("onesLike")}zerosLike(e){return n("zerosLike")}linspace(e,t,r){return n("linspace")}dispose(){return n("dispose")}}function n(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function r(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function o(e,t,n){return Math.max(e,Math.min(t,n))}function s(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function a(e,t,n=""){s(c(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function i(e){s(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function u(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||v(e)&&!n)for(let r=0;r<e.length;++r)u(e[r],t,n);else t.push(e);return t}function l(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function c(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function h(e){return e%1==0}function p(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function d(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=e.slice();return o[r]=t/n,o}function f(e,t){const n=t.length;return s((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),s(e.every(e=>h(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function m(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||o?null:f(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[a]||s[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function g(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function b(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function y(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function w(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function k(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function v(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function x(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function S(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function E(e){return"string"==typeof e||e instanceof String}function D(e){return"boolean"==typeof e}function I(e){return"number"==typeof e}function N(e){return Array.isArray(e)?N(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":I(e)?"float32":E(e)?"string":D(e)?"bool":"float32"}function F(e){return!!(e&&e.constructor&&e.call&&e.apply)}function A(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function M(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function T(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return function e(t,n,r){const o=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)o[n]=r[t+n]}else{const s=n[0],a=n.slice(1),i=a.reduce((e,t)=>e*t);for(let n=0;n<s;n++)o[n]=e(t+n*i,a,r)}return o}(0,e,t)}function $(e,t){const n=_(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function _(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function B(e){e.forEach(t=>{s(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function R(e){return e&&e.then&&"function"==typeof e.then}class C{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(R(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function P(){return e.ENV}let z;function L(){if(null==z){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}z=e}return z}function q(e,t){const n=function(){const e=L();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}e.ENV=null;const O=q("kernelRegistry",()=>new Map),W=q("gradRegistry",()=>new Map);function K(e,t){const n=j(e,t);return O.get(n)}function G(e){return W.get(e)}function U(e){const t=O.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[s,a]=o,[i]=s.split("_");i===e&&n.push(a)}return n}function V(e){const{kernelName:t,backendName:n}=e,r=j(t,n);O.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),O.set(r,e)}function H(e){const{kernelName:t}=e;W.has(t)&&P().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),W.set(t,e)}function j(e,t){return`${t}_${e}`}function J(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=u(e)),P().getBool("DEBUG")&&y(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Y(){return P().platform.now()}function Z(e,t="utf-8"){return t=t||"utf-8",P().platform.encode(e,t)}function X(e,t="utf-8"){return t=t||"utf-8",P().platform.decode(e,t)}var Q=Object.freeze({__proto__:null,createScalarValue:function(e,t){return"string"===t?Z(e):J([e],t)},toTypedArray:J,now:Y,fetch:function(e,t){return P().platform.fetch(e,t)},encodeString:Z,decodeString:X,shuffle:r,clamp:o,nearestLargerEven:function(e){return e%2==0?e:e+1},sum:function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t},randUniform:function(e,t){const n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){let n=0;for(let r=0;r<e.length;r++){const o=Number(e[r])-Number(t[r]);n+=o*o}return n},assert:s,assertShapesMatch:a,assertNonNull:i,flatten:u,sizeFromShape:l,isScalarShape:function(e){return 0===e.length},arraysEqual:c,isInt:h,tanh:function(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}},sizeToSquarishShape:function(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]},createShuffledIndices:function(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t},rightPad:p,repeatedTry:function(e,t=(e=>0),n){return new Promise((r,o)=>{let s=0;const a=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?o():setTimeout(a,i)};a()})},inferFromImplicitShape:d,parseAxisParam:f,squeezeShape:m,getTypedArrayFromDType:g,getArrayFromDType:b,checkConversionForErrors:y,isValidDtype:w,hasEncodingLoss:k,isTypedArray:v,bytesPerElement:x,bytesFromStringArray:S,isString:E,isBoolean:D,isNumber:I,inferDtype:N,isFunction:F,nearestDivisor:A,computeStrides:M,toNestedArray:T,makeOnesTypedArray:$,makeZerosTypedArray:_,makeZerosNestedTypedArray:function(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return T(e,new Float32Array(n));if("int32"===t)return T(e,new Int32Array(n));if("bool"===t)return T(e,new Uint8Array(n));throw new Error("Unknown data type "+t)},assertNonNegativeIntegerDimensions:B,locToIndex:function(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r},indexToLoc:function(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r},isPromise:R});class ee{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ne)}profileKernel(e,t,n){let r;const o=this.backendTimer.time(()=>{r=n()});for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{te(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:o,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])})})}}function te(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ne{logKernelProfile(e,t,n,r,o,s){const a="number"==typeof r?p(r+"ms",9):r.error,i=p(e,25),u=t.rank,l=t.size,c=p(t.shape.toString(),14);let h="";for(const e in o){const n=o[e];if(null!=n){const r=n.shape||t.shape,o=r.length;h+=`${e}: ${o}D ${o>0?r:""} `}}console.log(`%c${i}\t%c${a}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function re(e,t,n,r){const o=M(t),s=function(e,t,n,r){const o=l(t),s=r[r.length-1],a=new Array(s).fill(0),i=t.length,u="complex64"===n?ae(e):e;if(i>1)for(let e=0;e<o/s;e++){const t=e*s;for(let e=0;e<s;e++)a[e]=Math.max(a[e],oe(u[t+e],0,n).length)}return a}(e,t,n,o),a=t.length,i=function e(t,n,r,o,s,a=!0){const i="complex64"===r?2:1,u=n[0],l=n.length;if(0===l){if("complex64"===r){return[oe(ae(t)[0],0,r)]}return"bool"===r?[se(t[0])]:[t[0].toString()]}if(1===l){if(u>20){const e=3*i;let n=Array.from(t.slice(0,e)),o=Array.from(t.slice((u-3)*i,u*i));return"complex64"===r&&(n=ae(n),o=ae(o)),["["+n.map((e,t)=>oe(e,s[t],r)).join(", ")+", ..., "+o.map((e,t)=>oe(e,s[u-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?ae(t):Array.from(t)).map((e,t)=>oe(e,s[t],r)).join(", ")+"]"]}const c=n.slice(1),h=o.slice(1),p=o[0]*i,d=[];if(u>20){for(let n=0;n<3;n++){const o=n*p,a=o+p;d.push(...e(t.slice(o,a),c,r,h,s,!1))}d.push("...");for(let n=u-3;n<u;n++){const o=n*p,a=o+p;d.push(...e(t.slice(o,a),c,r,h,s,n===u-1))}}else for(let n=0;n<u;n++){const o=n*p,a=o+p;d.push(...e(t.slice(o,a),c,r,h,s,n===u-1))}const f=2===l?",":"";d[0]="["+d[0]+f;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+f;let m=",\n";for(let e=2;e<l;e++)m+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":m),d}(e,t,n,o,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+a),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function oe(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":E(e)?`'${e}'`:"bool"===n?se(e):parseFloat(e.toFixed(7)).toString(),p(r,t)}function se(e){return 0===e?"false":"true"}function ae(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ie{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=l(e),null!=n){const e=n.length;s(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||b(t,this.size),this.strides=M(e)}set(e,...t){0===t.length&&(t=[0]),s(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ue().makeTensor(this.values,this.shape,this.dtype)}}let ue=null,le=null;class ce{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=l(e),this.strides=M(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return le.buffer(this.shape,this.dtype,e)}bufferSync(){return le.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return T(this.shape,e)}arraySync(){return T(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=ue().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>X(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=ue().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>X(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ue().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ue().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return le.print(this,e)}clone(){return this.throwIfDisposed(),le.clone(this)}toString(e=!1){return re(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),le.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ue().makeVariable(this,e,t,n)}}Object.defineProperty(ce,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class he extends ce{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!c(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ue().disposeTensor(this),this.dataId=e.dataId,ue().incRef(this,null)}dispose(){ue().disposeVariable(this),this.isDisposedInternal=!0}}var pe,de,fe,me,ge;Object.defineProperty(he,Symbol.hasInstance,{value:e=>e instanceof ce&&null!=e.assign&&e.assign instanceof Function}),(pe=e.Rank||(e.Rank={})).R0="R0",pe.R1="R1",pe.R2="R2",pe.R3="R3",pe.R4="R4",pe.R5="R5",pe.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(de||(de={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(fe||(fe={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(me||(me={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ge||(ge={}));const be={float32:me,int32:de,bool:fe,complex64:ge};function ye(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return be[e][t]}function we(e,t){if(e.dtype===t.dtype)return[e,t];const n=ye(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ke(e,t){s(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function ve(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof ce)return void n.push(t);if(o=t,!Array.isArray(o)&&"object"!=typeof o)return;var o;const s=t;for(const t in s){const o=s[t];r.has(o)||(r.add(o),e(o,n,r))}}(e,t,new Set),t}var xe=Object.freeze({__proto__:null,makeTypesMatch:we,assertTypesMatch:ke,isTensorInList:function(e,t){return t.some(t=>t.id===e.id)},getTensorsInContainer:ve});class Se{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ee{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Se}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ee(this.backendInstance),!0}setupRegisteredKernels(){U(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){U(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(!r||r instanceof t||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=r.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:o}=this.initializeBackend(n);if(o||r)return{name:n,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,o=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,o,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ee.nextTensorId++}nextVariableId(){return Ee.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Ie.runKernelFunc(t=>t.cast(e,"float32"),t,null,"Cast",n)}}),[],{}),t}runKernel(e,t,n,r,o){return this.runKernelFunc(null,t,null,e,n,r,o)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let o=0;n.forEach(e=>{o+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,o,s,a){let i,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=K(r,this.backendName);let f,m;if(null!=d)p=()=>{const e=this.backend.numDataIds();f=d.kernelFunc({inputs:t,attrs:o,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map(({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n));if(l){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==a&&(a=[]);const t=i.filter((e,t)=>a[t]);e=(s||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{l&&(u=e.map(e=>this.keep(this.clone(e))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy(()=>e(this.backend,t));const o=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,o),o}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,()=>p()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),i=m.outputs):i=p()}),l&&this.addTapeNode(r,t,i,n,u,o),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(e=>null!=t[e]?t[e].shape:null),outputShapes:i.map(e=>e.shape),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?i:i[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=G(e);if(null!=r){const e=r.inputsToSave||[],o=r.outputsToSave||[];let a;r.saveAllInputs?(s(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>o[t]);return a.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=e;"string"===n&&E(e[0])&&(o=e.map(e=>Z(e)));const s=r.write(o,t,n),a=new ce(t,n,s,this.nextTensorId());if(this.incRef(a,r),"string"===n){const e=this.state.tensorInfo.get(s),t=S(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const o=new ce(t,n=n||"float32",e,this.nextTensorId());return this.incRef(o,r),o}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const o=new he(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*x(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof he||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,o,s){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},i=G(e);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=_(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],o,s))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ve(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(s(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));s(o instanceof ce,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},o={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],a=s.inputs;for(const e in a){const n=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),i=!0,o[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,a[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(o[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const o=n.inputs[t];r[o.id]&&(e[t]=o)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,o);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[o.id]=null==n?function(e){const t=$(l(e),"float32");return Ie.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,r){for(let o=t.length-1;o>=0;o--){const s=t[o],a=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(a);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const o=n(()=>i[t]());if("float32"!==o.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${o.dtype}'`);const a=s.inputs[t];if(!c(o.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${o.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=o;else{const t=e[a.id];e[a.id]=r(t,o),t.dispose()}}}}(e,a,e=>this.tidy(e),Ne);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:o,grads:r}})}customGrad(e){return s(F(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;s(t.every(e=>e instanceof ce),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc((r,o)=>(n=e(...t,o),s(n.value instanceof ce,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),s(F(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(e,r)=>{const o=n.gradFunc(e,r),a=Array.isArray(o)?o:[o];s(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),s(a.every(e=>e instanceof ce),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Y(),n=await this.backend.time(e);return n.wallMs=Y()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Se;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function De(){const t=L();if(null==t._tfengine){const e=new C(t);t._tfengine=new Ee(e)}var n;return n=t._tfengine.ENV,e.ENV=n,ue=()=>t._tfengine,t._tfengine}Ee.nextTensorId=0,Ee.nextVariableId=0;const Ie=De();function Ne(e,t){const n={a:e,b:t};return Ie.runKernelFunc((n,r)=>{const o=n.add(e,t);return r([e,t]),o},n,null,"Add")}function Fe(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var Ae=Object.freeze({__proto__:null,isMobile:function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1},isBrowser:Fe});const Me=P();function Te(e,t){let n=e;if(v(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||v(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!v(t))return void s(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);s(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),s(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const o=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],o,r.concat(n))}(e,r,[]),r}function $e(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function _e(e,t,n,r="numeric"){if(e instanceof ce)return $e(r,e.dtype,t,n),e;let o=N(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),$e(r,o,t,n),null==e||!v(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Te(e,o);v(e)||Array.isArray(e)||(e=[e]);const a="string"!==o?J(e,o):u(e,[],!0);return Ie.makeTensor(a,s,o)}function Be(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>_e(e,`${t}[${r}]`,n),r)}Me.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Me.registerFlag("IS_BROWSER",()=>Fe()),Me.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Me.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Me.registerFlag("PROD",()=>!1),Me.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Me.getBool("DEBUG")),Me.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Me.registerFlag("IS_TEST",()=>!1);function Re(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const o=(...e)=>{Ie.startScope(n);try{const t=r(...e);return R(t)&&console.error("Cannot return a Promise inside of tidy."),Ie.endScope(t),t}catch(e){throw Ie.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}const Ce=Re({complex_:function(e,t){const n=_e(e,"real","complex"),r=_e(t,"imag","complex");a(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const o={real:n,imag:r};return Ie.runKernelFunc(e=>e.complex(n,r),o,null,"Complex")}});function Pe(e,t,n,r){if(null==r&&(r=N(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!v(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){B(t);const e=l(t),r=l(n);s(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],o=e!==n.length-1||r!==l(t.slice(e));s(n[e]===t[e]||!o,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return v(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?J(e,r):u(e,[],!0),Ie.makeTensor(e,t,r)}function ze(e,t,n){return Pe(e,t,Te(e,n),n)}const Le={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function qe(e,t){const n={};let r,o=0;for(const s of t){const t=s.name,a=s.dtype,i=s.shape,u=l(i);let c;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const i=Le[n.dtype],l=e.slice(o,o+u*i),h="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];c[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=He()),c=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];c[e]=Math.round(t*n.scale+n.min)}}o+=u*i}else if("string"===a){const t=l(s.shape);c=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(o,o+4))[0];o+=4;const n=new Uint8Array(e.slice(o,o+t));c.push(n),o+=t}}else{const r=Le[a],s=e.slice(o,o+u*r);if("float32"===a)c=new Float32Array(s);else if("int32"===a)c=new Int32Array(s);else if("bool"===a)c=new Uint8Array(s);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{c=new Float32Array(s);const e=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let t=0;t<e.length;t++)e[t]=c[2*t],r[t]=c[2*t+1];const o=ze(e,i,"float32"),a=ze(r,i,"float32");n[t]=Ce(o,a),o.dispose(),a.dispose()}}o+=u*r}"complex64"!==a&&(n[t]=ze(c,i,a))}return n}function Oe(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let o=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength}),r.buffer}const We="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ke(e){return We?Buffer.byteLength(e):new Blob([e]).size}function Ge(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Ue(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ve(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ke(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ke(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function He(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),s=new Uint32Array(o);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(o)}}class je{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==je.instance&&(je.instance=new je),je.instance}static registerSaveRouter(e){je.getInstance().saveRouters.push(e)}static registerLoadRouter(e){je.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return je.getHandlers(e,"save")}static getLoadHandlers(e,t){return je.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?je.getInstance().loadRouters:je.getInstance().saveRouters).forEach(t=>{const o=t(e,n);null!==o&&r.push(o)}),r}}function Je(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ye(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Ze{constructor(e){if(this.indexedDB=Je(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ye(r),r.onsuccess=()=>{const o=r.result;if(null==t){const t=o.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return o.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(o.close(),n(r.error)),t.oncomplete=()=>o.close()}else{const r=Ve(t),s=o.transaction("model_info_store","readwrite");let a=s.objectStore("model_info_store");const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=o.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=s.objectStore("model_info_store");const t=a.delete(this.modelPath);t.onsuccess=()=>(o.close(),n(i.error)),t.onerror=e=>(o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==u?o.close():u.oncomplete=()=>o.close()}}},r.onerror=e=>n(r.error)})}}Ze.URL_SCHEME="indexeddb://";const Xe=e=>{return P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ze.URL_SCHEME)?(t=e.slice(Ze.URL_SCHEME.length),new Ze(t)):null;var t};je.registerSaveRouter(Xe),je.registerLoadRouter(Xe);class Qe{constructor(){this.indexedDB=Je()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Ye(n),n.onsuccess=()=>{const r=n.result,o=r.transaction("model_info_store","readonly"),s=o.objectStore("model_info_store").getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Ze.URL_SCHEME)?t.slice(Ze.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ye(r),r.onsuccess=()=>{const o=r.result,s=o.transaction("model_info_store","readwrite"),a=s.objectStore("model_info_store"),i=a.get(e);let u;i.onsuccess=()=>{if(null==i.result)return o.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),s=()=>{u=o.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==u?o.close():u.oncomplete=()=>o.close()}},r.onerror=e=>n(r.error)})}}const et="tensorflowjs_models",tt="info",nt="model_topology",rt="weight_specs",ot="weight_data",st="model_metadata";function at(e){return{info:[et,e,tt].join("/"),topology:[et,e,nt].join("/"),weightSpecs:[et,e,rt].join("/"),weightData:[et,e,ot].join("/"),modelMetadata:[et,e,st].join("/")}}function it(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class ut{constructor(e){if(!P().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=at(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ve(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(We)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(We){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ut.URL_SCHEME="localstorage://";const lt=e=>{return P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ut.URL_SCHEME)?(t=e.slice(ut.URL_SCHEME.length),new ut(t)):null;var t};je.registerSaveRouter(lt),je.registerLoadRouter(lt);class ct{constructor(){s(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),s("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=et+"/",n="/"+tt;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(n)){e[it(o)]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){var t;const n=at(e=(t=e).startsWith(ut.URL_SCHEME)?t.slice(ut.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ht{constructor(){this.managers={}}static getInstance(){return null==ht.instance&&(ht.instance=new ht),ht.instance}static registerManager(e,t){s(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),s(e.length>0,()=>"scheme must not be an empty string.");const n=ht.getInstance();s(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function pt(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+ht.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function dt(e,t,n=!1){s(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=je.getLoadHandlers(e);s(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),s(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const o=r[0],a=je.getSaveHandlers(t);s(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),s(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],u=pt(e).scheme,l=pt(e).path,c=u===pt(e).scheme,h=await o.load();n&&c&&await ht.getManager(u).removeModel(l);const p=await i.save(h);return n&&!c&&await ht.getManager(u).removeModel(l),p.modelArtifactsInfo}class ft{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(P().get("IS_BROWSER")){P().setPlatform("browser",new ft);try{ht.registerManager(ut.URL_SCHEME,new ct)}catch(e){}try{ht.registerManager(Ze.URL_SCHEME,new Qe)}catch(e){}}const mt=()=>require("node-fetch");let gt;class bt{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=P().global.fetch?P().global.fetch(e,t):(null==gt&&(gt=mt()),gt(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function yt(e,t="float32",n){return t=t||"float32",B(e),new ie(e,t,n)}P().get("IS_NODE")&&P().setPlatform("node",new bt);const wt=Re({cast_:function(e,t){const n=_e(e,"x","cast");if(!w(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},o={dtype:t};return Ie.runKernelFunc(e=>e.cast(n,t),r,null,"Cast",o)}});const kt=Re({clone_:function(e){const t=_e(e,"x","clone",null),n={x:t};return Ie.runKernelFunc(()=>Ie.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n,null,"Identity")}});function vt(e,t=!1){console.log(e.toString(t))}De(),le={buffer:yt,cast:wt,clone:kt,print:vt};function xt(e){return new Promise(e=>setTimeout(e)).then(e)}class St{constructor(e){if(!P().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(St.URL_SCHEME)&&(e=e.slice(St.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=o,await xt(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await xt(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ve(e)}}}}St.URL_SCHEME="downloads://";class Et{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const o=new FileReader;o.onload=o=>{const s=JSON.parse(o.target.result),a=s.modelTopology;if(null==a)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:a});const i=s.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const l=[],c=[],h=[];i.forEach(e=>{e.paths.forEach(e=>{c.push(e),h.push(null)}),l.push(...e.weights)}),i.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,o=c.indexOf(e);h[o]=r,-1===h.indexOf(null)&&n({modelTopology:a,weightSpecs:l,weightData:Ge(h),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},o.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Ue(e.name)),o={};for(const s of e)s.paths.forEach(e=>{const s=Ue(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);o[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return o}}function Dt(e,t,n,r){!function(e){s(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){s(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),s(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),s(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map(s=>(s.then(s=>{const a=n+ ++o/e.length*(r-n);return t(a),s}),s)))}async function It(e,t){null==t&&(t={});const n=null==t.fetchFunc?P().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),o=(null==t.onProgress?await Promise.all(r):await Dt(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(o):await Dt(o,t.onProgress,.5,1)}function Nt(e){return async(t,n="",r)=>{const o=t.map(()=>!1),s={},a=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=Le[u]*l(e.shape),h=()=>{o[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((t,n)=>{t===e.name&&(h(),a[n]=!0)}):h(),i.push(e.name),n+=c})}),!a.every(e=>e)){const e=r.filter((e,t)=>!a[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=o.reduce((e,t,n)=>(t&&e.push(n),e),[]),c=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)})});const h=await e(c),p={};let d=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=h[d+e].byteLength;const o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(h[d+e]);a.set(t,i),i+=t.byteLength}s[e].forEach(e=>{const t=qe(o.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]}),d+=n}),p}}je.registerSaveRouter(e=>P().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(St.URL_SCHEME)?function(e="model"){return new St(e)}(e.slice(St.URL_SCHEME.length)):null);class Ft{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(s("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=P().platform.fetch,s(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&s(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Ve(e),responses:[o]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+o.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,o=t.generatedBy,s=t.convertedBy,a=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:i,generatedBy:o,convertedBy:s,format:a},h=t.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),o=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(o+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),[s,Ge(await It(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function At(e){return null!=e.match(Ft.URL_SCHEME_REGEX)}Ft.URL_SCHEME_REGEX=/^https?:\/\//;const Mt=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>At(e)):At(e),n)return Tt(e,t)}return null};function Tt(e,t){return new Ft(e,t)}je.registerSaveRouter(Mt),je.registerLoadRouter(Mt);class $t{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class _t{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var Bt=Object.freeze({__proto__:null,browserFiles:function(e){return new Et(e)},browserHTTPRequest:function(e,t){return Tt(e,t)},concatenateArrayBuffers:Ge,decodeWeights:qe,encodeWeights:async function(e,t){const n=[],r=[],o=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<o.length;++s){const a=o[s],i=Array.isArray(e)?e[s].tensor:e[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const u={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let o=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,o),o+=4,r.set(n,o),o+=n.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Oe(await Promise.all(r)),specs:n}},fromMemory:function(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new $t(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $t({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $t({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})},getLoadHandlers:(e,t)=>je.getLoadHandlers(e,t),getModelArtifactsInfoForJSON:Ve,getSaveHandlers:e=>je.getSaveHandlers(e),http:Tt,isHTTPScheme:At,loadWeights:async function(e,t="",n,r){return Nt(e=>It(e,{requestInit:r}))(e,t,n)},registerLoadRouter:e=>je.registerLoadRouter(e),registerSaveRouter:e=>je.registerSaveRouter(e),weightsLoaderFactory:Nt,withSaveHandler:function(e){return new _t(e)},copyModel:async function(e,t){return dt(e,t,!1)},listModels:async function(){const e=ht.getSchemes(),t={};for(const n of e){const e=await ht.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t},moveModel:async function(e,t){return dt(e,t,!0)},removeModel:async function(e){const t=pt(e);return ht.getManager(t.scheme).removeModel(t.path)}});const Rt=Re({reshape_:function(e,t){const n=_e(e,"x","reshape",null),r={x:n},o={shape:t};return Ie.runKernelFunc((e,r)=>(t=d(t,n.size),s(n.size===l(t),()=>"new shape and old shape must have the same number of elements."),r([n]),e.reshape(n,t)),r,null,"Reshape",o)}});const Ct=Re({matMul_:function(e,t,n=!1,r=!1){let o=_e(e,"a","matMul"),a=_e(t,"b","matMul");[o,a]=we(o,a);const i={a:o,b:a},u={transposeA:n,transposeB:r};return Ie.runKernelFunc((e,t)=>{t([o,a]);const i=n?o.shape[o.rank-2]:o.shape[o.rank-1],u=r?a.shape[a.rank-1]:a.shape[a.rank-2],c=n?o.shape[o.rank-1]:o.shape[o.rank-2],h=r?a.shape[a.rank-2]:a.shape[a.rank-1],p=o.shape.slice(0,-2),d=a.shape.slice(0,-2),f=l(p),m=l(d),g=f===m||1===f||1===m;s(o.rank>=2&&a.rank>=2&&g,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${p}) and (${d}).`),s(i===u,()=>`Error in matMul: inner shapes (${i}) and (${u}) of Tensors with shapes ${o.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=(f>m?p:d).concat([c,h]),y=Rt(o,n?[f,i,c]:[f,c,i]),w=Rt(a,r?[m,h,u]:[m,u,h]),k=e.batchMatMul(y,w,n,r);return Rt(k,b)},i,null,"BatchMatMul",u)}});const Pt=Re({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const o=_e(e,"indices","oneHot","int32"),s=[...o.shape,t],a={indices:o},i={depth:t,onValue:n,offValue:r};return Ie.runKernelFunc((e,a)=>(a([o]),Rt(e.oneHot(Rt(o,[o.size]),t,n,r),s)),a,null,"OneHot",i)}});const zt=Re({transpose_:function(e,t){const n=_e(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),s(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{s(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},o={perm:t};return Ie.runKernelFunc(e=>e.transpose(n,t),r,null,"Transpose",o)}});const Lt=Re({confusionMatrix_:function(e,t,n){const r=_e(e,"labels","confusionMatrix"),o=_e(t,"predictions","confusionMatrix");s(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),s(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),s(1===o.rank,()=>"Expected the rank of predictions to be 1, but got "+o.rank),s(r.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),s(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const a=Pt(wt(r,"int32"),n),i=Pt(wt(o,"int32"),n),u=zt(a),l=Ct(u,i);return wt(l,"int32")}});var qt=Object.freeze({__proto__:null,confusionMatrix:Lt});function Ot(e,t,n){if(i(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Te(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Pe(e,t,r,n)}let Wt;const Kt=Re({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,s=!1,a=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);a=!0}if(o){const t=2;if(o&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=K("FromPixels",Ie.backendName)){const n={pixels:e},r={numChannels:t};return Ie.runKernel("FromPixels",n,r)}const[i,u]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,c;if(a?l=e.getContext("2d").getImageData(0,0,i,u).data:r||n?l=e.data:(s||o)&&(null==Wt&&(Wt=document.createElement("canvas").getContext("2d")),Wt.canvas.width=i,Wt.canvas.height=u,Wt.drawImage(e,0,0,i,u),l=Wt.getImageData(0,0,i,u).data),4===t)c=new Int32Array(l);else{const e=i*u;c=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)c[n*t+e]=l[4*n+e]}return Ot(c,[u,i,t],"int32")}});var Gt=Object.freeze({__proto__:null,toPixels:async function(e,t){let n=_e(e,"img","toPixels");if(!(e instanceof ce)){const e=n;n=wt(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,o]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(o*r*4);for(let e=0;e<r*o;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const o=a[e*s+r];if("float32"===n.dtype){if(o<0||o>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${o}.`)}else if("int32"===n.dtype&&(o<0||o>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${o}.`);1===s?(t[0]=o*i,t[1]=o*i,t[2]=o*i):t[r]=o*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=o,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,o,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u},fromPixels:Kt});function Ut(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let o=1;for(let e=0;e<n.length-1;++e)o*=n[e];const s=e.shape,a=n.slice();a.pop();let i=1;for(let t=r;t<e.rank;++t)i*=s[t],a.push(s[t]);const u=[...M(e.shape).map(e=>e/i),1].slice(0,r);return[a,o,i,u]}var Vt=Object.freeze({__proto__:null,prepareAndValidate:Ut});function Ht(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(s+` update.rank < ${o}. `);if(e.length<r+(n.rank-o))throw new Error(s+" Output shape length < "+(r+(n.rank-o)));if(n.rank!==o+e.length-r)throw new Error(s+" update.rank != "+(o+e.length-r));for(let e=0;e<o;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-o;++t)if(n.shape[t+o]!==e[t+r])throw new Error(s+` updates.shape[${t+o}] (${n.shape[t+o]}) != shape[${t+o}] (${e[t+o]})`)}function jt(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Ht(n,t,e)}function Jt(e,t,n){const r=t.shape.length,o=r>1?t.shape[r-1]:1,s=n.length;let a=1;for(let e=o;e<s;++e)a*=n[e];const i=o<1?1:o;return{sliceRank:o,numUpdates:l(t.shape)/i,sliceSize:a,strides:[...M(n.slice(0,o)),1],outputSize:l(n)}}var Yt=Object.freeze({__proto__:null,validateUpdateShape:Ht,validateInput:jt,calculateShapes:Jt});function Zt(e,t,n){const r=e.shape.length;s(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),s(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let o=0;o<r;++o)s(t[o]+n[o]<=e.shape[o],()=>`Error in slice${r}D: begin[${o}] + size[${o}] (${t[o]+n[o]}) would overflow input.shape[${o}] (${e.shape[o]})`)}function Xt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Qt(e,t,n){const r=[];for(let o=0;o<e.length;o++)r[o]=Math.ceil((t[o]-e[o])/n[o]);return r}function en(e,t,n,r){const o=[...e];for(let e=o.length;e<r.length;e++)o.push(1);for(let e=0;e<n;e++)0===e?o[t]=1:(o.splice(t,0,1),o.pop());return o}function tn(e,t,n){return n<=e?n:n-(t-1)}function nn(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function rn(e,t,n,r,o,s,a,i,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=on(a,u,l,r,e),h=sn(i,u,l,o,e),p=en(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=un(a,r,s,e,t,u),h[t]=ln(i,o,s,e,t,u),p[t]=an(s,t,u);return{begin:c,end:h,strides:p}}function on(e,t,n,r,o){const s=[...o],a=nn(n,t);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=0;else{const a=tn(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function sn(e,t,n,r,s){const a=[...s],i=nn(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=tn(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=o(0,a[e],s[e])}return a}function an(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function un(e,t,n,r,s,a){let i=t[s];const u=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o(0,i,l-1),i}function ln(e,t,n,r,s,a){let i=t[s];const u=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=u>0?o(0,i,l):o(-1,i,l-1),i}function cn(e,t,n){let r;const o=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(o-1).fill(0)]:t.length<o?t.concat(new Array(o-t.length).fill(0)):t.slice(),r.forEach(e=>{s(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(o).fill(-1):"number"==typeof n?[n,...new Array(o-1).fill(-1)]:n.length<o?n.concat(new Array(o-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(s(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}var hn=Object.freeze({__proto__:null,assertParamsValid:Zt,maskToAxes:Xt,computeOutShape:Qt,stridesWithElidedDims:en,getNormalizedAxes:rn,startIndicesWithElidedDims:on,stopIndicesWithElidedDims:sn,stridesForAxis:an,startForAxis:un,stopForAxis:ln,isSliceContinous:function(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let o=r+1;o<n.length;o++)if(t[o]>0||n[o]!==e[o])return!1;return!0},computeFlatOffset:function(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n},parseSliceParams:cn});class pn{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class dn{constructor(){this.classNameMap={}}static getMap(){return null==dn.instance&&(dn.instance=new dn),dn.instance}static register(e){dn.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function fn(e){s(null!=e.className,()=>"Class being registered does not have the static className property defined."),s("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),s(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),dn.register(e)}var mn=Object.freeze({__proto__:null,Serializable:pn,SerializationMap:dn,registerClass:fn});function gn(){return 32===Ie.backend.floatPrecision()?.001:.1}function bn(e,t,n){let r=!0;if((v(e)||v(t))&&(r=!1),v(e)&&v(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Te(e),r=Te(t);if(!c(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const o=v(e)?e:u(e),s=v(t)?t:u(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.\nActual:   ${o}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=o[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${o}.\nExpected: ${s}.`)}}function yn(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var wn=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=gn()),bn(e,t,(e,t)=>yn(e,t,n))},testEpsilon:gn,expectPromiseToFail:function(e,t){e().then(()=>t.fail(),()=>t())},expectArraysEqual:function(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return E(e)||E(e[0])||E(t)||E(t[0])?bn(e,n,(e,t)=>e==t):bn(e,t,(e,t)=>yn(e,t,0))},expectNumbersClose:function(e,t,n){if(null==n&&(n=gn()),!yn(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)},expectValuesInRange:function(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}});function kn(e){P().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function vn(e,t){return Ie.tidy(e,t)}function xn(e){ve(e).forEach(e=>e.dispose())}function Sn(e){return Ie.keep(e)}const En=Re({add_:function(e,t){let n=_e(e,"a","add"),r=_e(t,"b","add");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.add(n,r);return t([n,r]),o},o,null,"Add")}});const Dn=Re({floorDiv_:function(e,t){let n=_e(e,"a","floorDiv"),r=_e(t,"b","floorDiv");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.floorDiv(n,r);return t([n,r]),o},o,null,"FloorDiv")}});const In=Re({div_:function(e,t){let n=_e(e,"a","div"),r=_e(t,"b","div");if([n,r]=we(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Dn(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.realDivide(n,r);return t([n,r]),o},o,null,"Div",{})}});const Nn=Re({mul_:function(e,t){let n=_e(e,"a","mul"),r=_e(t,"b","mul");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.multiply(n,r);return t([n,r]),o},o,null,"Multiply")}});const Fn=Re({abs_:function(e){const t=_e(e,"x","abs"),n={x:t};return Ie.runKernelFunc((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t)),n,null,"Abs")}});const An=Re({acos_:function(e){const t=_e(e,"x","acos"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.acos(t);return n([t]),r},n,null,"Acos")}});const Mn=Re({acosh_:function(e){const t=_e(e,"x","acosh"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.acosh(t);return n([t]),r},n,null,"Acosh")}});const Tn=Re({addN_:function(e){s(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),s(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>_e(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!c(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return Ie.runKernelFunc((e,n)=>{const r=e.addN(t);return n(t),r},r,null,"AddN")}});function $n(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _n(e,t,n){const r=e.length+t.length,o=[];let s=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?o.push(e[s++]):o.push(t[a++]);return o}function Bn(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map(t=>e[t])]}function Rn(e,t){return _n(e,t.map(e=>1),t)}function Cn(e,t){if($n(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Pn(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function zn(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ln=Re({all_:function(e,t=null,n=!1){let r=_e(e,"x","all","bool");const o={x:r},s={axis:t,keepDims:n};return Ie.runKernelFunc(e=>{const o=f(t,r.shape);let s=o;const a=Cn(s,r.rank);null!=a&&(r=zt(r,a),s=zn(s.length,r.rank));const i=e.all(r,s);if(n){const e=Rn(i.shape,o);return Rt(i,e)}return i},o,null,"All",s)}});const qn=Re({any_:function(e,t=null,n=!1){let r=_e(e,"x","any","bool");const o={x:r},s={axis:t,keepDims:n};return Ie.runKernelFunc(e=>{const o=f(t,r.shape);let s=o;const a=Cn(s,r.rank);null!=a&&(r=zt(r,a),s=zn(s.length,r.rank));const i=e.any(r,s);if(n){const e=Rn(i.shape,o);return Rt(i,e)}return i},o,null,"Any",s)}});const On=Re({argMax_:function(e,t=0){let n=_e(e,"x","argMax");const r={x:n},o={axis:t};return Ie.runKernelFunc((e,r)=>{r([n]);let o=f(t,n.shape);const s=Cn(o,n.rank);return null!=s&&(n=zt(n,s),o=zn(o.length,n.rank)),e.argMax(n,o[0])},r,null,"ArgMax",o)}});const Wn=Re({argMin_:function(e,t=0){let n=_e(e,"x","argMin");const r={x:n},o={axis:t};return Ie.runKernelFunc((e,r)=>{r([n]),null==t&&(t=0);let o=f(t,n.shape);const s=Cn(o,n.rank);return null!=s&&(n=zt(n,s),o=zn(o.length,n.rank)),e.argMin(n,o[0])},r,null,"ArgMin",o)}});const Kn=Re({asin_:function(e){const t=_e(e,"x","asin"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.asin(t);return n([t]),r},n,null,"Asin")}});const Gn=Re({asinh_:function(e){const t=_e(e,"x","asinh"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.asinh(t);return n([t]),r},n,null,"Asinh")}});const Un=Re({atan_:function(e){const t=_e(e,"x","atan"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.atan(t);return n([t]),r},n,null,"Atan")}});const Vn=Re({atan2_:function(e,t){let n=_e(e,"a","atan2"),r=_e(t,"b","atan2");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.atan2(n,r);return t([n,r]),o},o,null,"Atan2")}});const Hn=Re({atanh_:function(e){const t=_e(e,"x","atanh"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.atanh(t);return n([t]),r},n,null,"Atanh")}});function jn(e,t,n,r,o,s,a="channelsLast"){const[i,u]=Qn(t);let l;if("channelsLast"===a)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);l=[i,u,e[1],e[1]]}return Yn(e,l,n,r,o,s,!1,a)}function Jn(e,t,n,r,o,s,a="NDHWC"){const[i,u,l]=er(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[i,u,l,e[1],e[1]]}return Zn(e,c,n,r,o,!1,h,s)}function Yn(e,t,n,r,o,a,i=!1,u="channelsLast"){let[l,c,p,d]=[-1,-1,-1,-1];if("channelsLast"===u)[l,c,p,d]=e;else{if("channelsFirst"!==u)throw new Error("Unknown dataFormat "+u);[l,d,c,p]=e}const[f,m,,g]=t,[b,y]=Qn(n),[w,k]=Qn(r),v=tr(f,w),x=tr(m,k),{padInfo:S,outHeight:E,outWidth:D}=function(e,t,n,r,o,a,i,u,l){let c,p,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,o){null==r&&(r=Xn(e,t,n));const a=e[0],i=e[1],u=nr((a-t+2*r)/n+1,o);s(h(u),()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`);const l=nr((i-t+2*r)/n+1,o);return s(h(l),()=>`The output # of columns (${l}) must be an integer. Change the stride and/or zero pad parameters`),[u,l]}([t,n],a,r,e,u);p=o[0],d=o[1]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/o);const e=Math.max(0,(p-1)*r+a-t),s=Math.max(0,(d-1)*o+i-n),u=Math.floor(e/2),l=e-u,h=Math.floor(s/2);c={top:u,bottom:l,left:h,right:s-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-a+1)/r),d=Math.ceil((n-i+1)/o);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const s="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];c={top:s,bottom:h,left:f,right:m,type:0===s&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},p=nr((t-a+s+h)/r+1,u),d=nr((n-i+f+m)/o+1,u)}}return{padInfo:c,outHeight:p,outWidth:d}}(o,c,p,b,y,v,x,a,u),I=i?g*d:g;let N;return"channelsFirst"===u?N=[l,I,E,D]:"channelsLast"===u&&(N=[l,E,D,I]),{batchSize:l,dataFormat:u,inHeight:c,inWidth:p,inChannels:d,outHeight:E,outWidth:D,outChannels:I,padInfo:S,strideHeight:b,strideWidth:y,filterHeight:f,filterWidth:m,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:N,filterShape:t}}function Zn(e,t,n,r,o,a=!1,i="channelsLast",u){let[l,c,p,d,f]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,p,d,f]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,f,c,p,d]=e}const[m,g,b,,y]=t,[w,k,v]=er(n),[x,S,E]=er(r),D=tr(m,x),I=tr(g,S),N=tr(b,E),{padInfo:F,outDepth:A,outHeight:M,outWidth:T}=function(e,t,n,r,o,a,i,u,l,c,p){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,o,a){null==o&&(o=Xn(e,t,r));const i=e[0],u=e[1],l=e[2],c=nr((i-t+2*o)/r+1,a);s(h(c),()=>`The output # of depths (${c}) must be an integer. Change the stride and/or zero pad parameters`);const p=nr((u-t+2*o)/r+1,a);s(h(p),()=>`The output # of rows (${p}) must be an integer. Change the stride and/or zero pad parameters`);const d=nr((l-t+2*o)/r+1,a);return s(h(d),()=>`The output # of columns (${d}) must be an integer. Change the stride and/or zero pad parameters`),[c,p,d,n]}([t,n,r,1],u,1,o,e,p);f=a[0],m=a[1],g=a[2]}else if("same"===e){f=Math.ceil(t/o),m=Math.ceil(n/a),g=Math.ceil(r/i);const e=(f-1)*o+u-t,s=(m-1)*a+l-n,h=(g-1)*i+c-r,p=Math.floor(e/2),b=e-p,y=Math.floor(s/2),w=s-y,k=Math.floor(h/2);d={top:y,bottom:w,left:k,right:h-k,front:p,back:b,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-u+1)/o),m=Math.ceil((n-l+1)/a),g=Math.ceil((r-c+1)/i)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(o,c,p,d,w,k,v,D,I,N,u),$=a?y*f:y;let _;return"channelsFirst"===i?_=[l,$,A,M,T]:"channelsLast"===i&&(_=[l,A,M,T,$]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:p,inWidth:d,inChannels:f,outDepth:A,outHeight:M,outWidth:T,outChannels:$,padInfo:F,strideDepth:w,strideHeight:k,strideWidth:v,filterDepth:m,filterHeight:g,filterWidth:b,effectiveFilterDepth:D,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:x,dilationHeight:S,dilationWidth:E,inShape:e,outShape:_,filterShape:t}}function Xn(e,t,n,r=1){const o=tr(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function Qn(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function er(e){return"number"==typeof e?[e,e,e]:e}function tr(e,t){return t<=1?e:e+(e-1)*(t-1)}function nr(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function rr(e){const[t,n,r]=Qn(e);return 1===t&&1===n&&1===r}function or(e,t){return rr(e)||rr(t)}function sr(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const ar=Re({avgPool_:function(e,t,n,r,o){const a=_e(e,"x","avgPool","float32");s(or(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,u=!1;3===a.rank&&(u=!0,i=Rt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=o&&s(h(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const l={x:i},p={filterSize:t,strides:n,pad:r,dimRoundingMode:o};let d=Ie.runKernelFunc((e,s)=>{const a=jn(i.shape,t,n,1,r,o);return s([i]),1===a.filterWidth&&1===a.filterHeight&&c(a.inShape,a.outShape)?i.clone():e.avgPool(i,a)},l,null,"AvgPool",p);return d=wt(d,a.dtype),u?Rt(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const ir=Re({avgPool3d_:function(e,t,n,r,o,a="NDHWC",i){null==i?i=[1,1,1]:kn("dilations is deprecated, this field will be gone in v3.0.0.");const u=_e(e,"x","avgPool3d","float32");let l=u,c=!1;4===u.rank&&(c=!0,l=Rt(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),s(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),s("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),s(or(n,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=o&&s(h(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const p={x:l},d={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:a,dilations:i};let f=Ie.runKernelFunc((e,s)=>{null==i&&(i=[1,1,1]);const u=Jn(l.shape,t,n,i,r,o,a);return s([l]),e.avgPool3d(l,u)},p,null,"AvgPool3D",d);return f=wt(f,l.dtype),c?Rt(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});function ur(e,t){const n=e[0].length;e.forEach((e,t)=>{s(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),s(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,o)=>{for(let a=0;a<n;a++)s(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${o}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function lr(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const cr=Re({concat_:function(e,t=0){s(e.length>=1,()=>"Pass at least one tensor to concat");let n=Be(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)});const r=n,o={axis:t};return Ie.runKernelFunc((e,r)=>{const o=f(t,n[0].shape)[0],s=lr(n.map(e=>e.shape),o);if(0===l(s))return ze([],s);if(n=n.filter(e=>e.size>0),1===n.length)return n[0];ur(n.map(e=>e.shape),o);const a=e.concat(n,o);return r(n),a},r,null,"Concat",o)}});const hr=Re({sigmoid_:function(e){const t=_e(e,"x","sigmoid"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.sigmoid(t);return n([r]),r},n,null,"Sigmoid")}});const pr=Re({slice_:function(e,t,n){const r=_e(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const o={x:r},s={begin:t,size:n};return Ie.runKernelFunc((e,o)=>{const[s,a]=cn(r,t,n);return Zt(r,s,a),o([r]),e.slice(r,s,a)},o,null,"Slice",s)}});const dr=Re({tanh_:function(e){const t=_e(e,"x","tanh"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.tanh(t);return n([r]),r},n,null,"Tanh")}});const fr=Re({basicLSTMCell_:function(e,t,n,r,o,s){const a=_e(e,"forgetBias","basicLSTMCell"),i=_e(t,"lstmKernel","basicLSTMCell"),u=_e(n,"lstmBias","basicLSTMCell"),l=_e(r,"data","basicLSTMCell"),c=_e(o,"c","basicLSTMCell"),h=_e(s,"h","basicLSTMCell"),p=cr([l,h],1),d=Ct(p,i),f=En(d,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=pr(f,[0,0],b),w=pr(f,[0,g],b),k=pr(f,[0,2*g],b),v=pr(f,[0,3*g],b),x=En(Nn(hr(y),dr(w)),Nn(c,hr(En(a,k))));return[x,Nn(dr(x),hr(v))]}});const mr=Re({batchToSpaceND_:function(e,t,n){const r=_e(e,"x","batchToSpaceND"),o=t.reduce((e,t)=>e*t);s(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),s(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),s(r.shape[0]%o==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);const a={x:r},i={blockShape:t,crops:n};return Ie.runKernelFunc(e=>e.batchToSpaceND(r,t,n),a,null,"BatchToSpaceND",i)}});function gr(e){return null==e?null:0===e.rank?Rt(e,[e.size]):1===e.rank?e:2===e.rank?Rt(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Rt(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}const br=Re({batchNorm_:function(e,t,n,r,o,a){null==a&&(a=.001);const i=_e(e,"x","batchNorm"),u=_e(t,"mean","batchNorm"),l=_e(n,"variance","batchNorm");let c,h;null!=o&&(c=_e(o,"scale","batchNorm")),null!=r&&(h=_e(r,"offset","batchNorm")),s(u.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s(null==h||u.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s(null==c||u.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p=function(e){let t;return t=0===e.rank||1===e.rank?Rt(e,[1,1,1,e.size]):2===e.rank?Rt(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Rt(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:p,scale:c,offset:h,mean:u,variance:l},f={varianceEpsilon:a},m=Ie.runKernelFunc((e,t)=>(t([p,u,l,c]),e.batchNorm(p,gr(u),gr(l),gr(h),gr(c),a)),d,null,"FusedBatchNorm",f);return Rt(m,i.shape)}});const yr=Re({batchNorm2d_:function(e,t,n,r,o,a){const i=_e(e,"x","batchNorm"),u=_e(t,"mean","batchNorm"),l=_e(n,"variance","batchNorm");let c,h;return null!=o&&(c=_e(o,"scale","batchNorm")),null!=r&&(h=_e(r,"offset","batchNorm")),s(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),s(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),s(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&s(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=h&&s(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),br(i,u,l,h,c,a)}});const wr=Re({batchNorm3d_:function(e,t,n,r,o,a){const i=_e(e,"x","batchNorm"),u=_e(t,"mean","batchNorm"),l=_e(n,"variance","batchNorm");let c,h;return null!=o&&(c=_e(o,"scale","batchNorm")),null!=r&&(h=_e(r,"offset","batchNorm")),s(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),s(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),s(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&s(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=h&&s(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),br(i,u,l,h,c,a)}});const kr=Re({batchNorm4d_:function(e,t,n,r,o,a){const i=_e(e,"x","batchNorm"),u=_e(t,"mean","batchNorm"),l=_e(n,"variance","batchNorm");let c,h;return null!=o&&(c=_e(o,"scale","batchNorm")),null!=r&&(h=_e(r,"offset","batchNorm")),s(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),s(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),s(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&s(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=h&&s(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),br(i,u,l,h,c,a)}});const vr=Re({broadcastTo_:function(e,t){let n=_e(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Rt(n,e)}const o=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(o[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return kt(n);const a={x:n},i={shape:t,inputShape:o};return Ie.runKernelFunc(e=>e.tile(n,s),a,null,"BroadcastTo",i)}});const xr=Re({ceil_:function(e){const t=_e(e,"x","ceil"),n={x:t};return Ie.runKernelFunc(e=>e.ceil(t),n,null,"Ceil")}});const Sr=Re({clipByValue_:function(e,t,n){const r=_e(e,"x","clipByValue");s(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const o={x:r},a={clipValueMin:t,clipValueMax:n};return Ie.runKernelFunc((e,o)=>{const s=e.clip(r,t,n);return o([r]),s},o,null,"ClipByValue",a)}});const Er=Re({concat1d_:function(e){return cr(e,0)}});const Dr=Re({concat2d_:function(e,t){return cr(e,t)}});const Ir=Re({concat3d_:function(e,t){return cr(e,t)}});const Nr=Re({concat4d_:function(e,t){return cr(e,t)}});const Fr=Re({conv2d_:function(e,t,n,r,o="NHWC",a=[1,1],i){const u=_e(e,"x","conv2d"),l=_e(t,"filter","conv2d");let c=u,p=!1;3===u.rank&&(p=!0,c=Rt(u,[1,u.shape[0],u.shape[1],u.shape[2]])),s(4===c.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),s(4===l.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+l.rank+"."),null!=i&&s(h(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d="NHWC"===o?c.shape[3]:c.shape[1];s(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),s(or(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const f={x:c,filter:l},m={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i},g=Ie.runKernelFunc((e,t)=>{const s=sr(o),u=Yn(c.shape,l.shape,n,a,r,i,!1,s),h=e.conv2d(c,l,u);return t([c,l]),h},f,null,"Conv2D",m);return p?Rt(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Ar=Re({conv1d_:function(e,t,n,r,o="NWC",a=1,i){const u=_e(e,"x","conv1d"),l=_e(t,"filter","conv1d");let c=u,p=!1;2===u.rank&&(p=!0,c=Rt(u,[1,u.shape[0],u.shape[1]])),s(3===c.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),s(3===l.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+l.rank+"."),null!=i&&s(h(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),s(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),s(or(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),s("NWC"===o,()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const d=Rt(l,[1,l.shape[0],l.shape[1],l.shape[2]]),f=Rt(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=Fr(f,d,[1,n],r,"NHWC",[1,a],i);return Rt(m,p?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}});const Mr=Re({conv2DBackpropInput_:function(e,t,n,r,o,a="NHWC",i){s(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let u=e,l=t,c=!1;3===t.rank&&(c=!0,l=Rt(t,[1,t.shape[0],t.shape[1],t.shape[2]]),u=[1,e[0],e[1],e[2]]),s(4===u.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+u.length+"."),s(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank),s(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const p="NHWC"===a?u[3]:u[1],d="NHWC"===a?l.shape[3]:l.shape[1];s(p===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`),s(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),null!=i&&s(h(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const f={dy:l,filter:n},m={strides:r,pad:o,dataFormat:a,dimRoundingMode:i,inputShape:u},g=Ie.runKernelFunc((e,t)=>{const s=sr(a),c=Yn(u,n.shape,r,1,o,i,!1,s),h=e.conv2dDerInput(l,n,c);return t([l,n]),h},f,null,"Conv2DBackpropInput",m);return c?Rt(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Tr=Re({conv2dTranspose_:function(e,t,n,r,o,s){const a=_e(e,"x","conv2dTranspose"),i=_e(t,"filter","conv2dTranspose");return Mr(n,a,i,r,o,"NHWC",s)}});const $r=Re({conv3d_:function(e,t,n,r,o="NDHWC",a=[1,1,1]){const i=_e(e,"x","conv3d"),u=_e(t,"filter","conv3d");let l=i,c=!1;4===i.rank&&(c=!0,l=Rt(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),s(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),s(5===u.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+u.rank+"."),s(l.shape[4]===u.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${u.shape[3]}.`),s(or(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),s("NDHWC"===o,()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:o,dilations:a},d=Ie.runKernelFunc((e,t)=>{const o=Zn(l.shape,u.shape,n,a,r),s=e.conv3d(l,u,o);return t([l,u]),s},h,null,"Conv3D",p);return c?Rt(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const _r=Re({conv3DBackpropInput_:function(e,t,n,r,o){s(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,u=!1;4===t.rank&&(u=!0,i=Rt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],c=i.shape[4];s(5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),s(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),s(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),s(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),s(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const h={dy:i,filter:n},p={pad:o,strides:r,inputShape:a},d=Ie.runKernelFunc(e=>{const t=Zn(a,n.shape,r,1,o);return e.conv3dDerInput(i,n,t)},h,null,"Conv3DBackpropInputV2",p);return u?Rt(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Br=Re({conv3dTranspose_:function(e,t,n,r,o){const s=_e(e,"x","conv3dTranspose"),a=_e(t,"filter","conv3dTranspose");return _r(n,s,a,r,o)}});const Rr=Re({cos_:function(e){const t=_e(e,"x","cos"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.cos(t);return n([t]),r},n,null,"Cos")}});const Cr=Re({cosh_:function(e){const t=_e(e,"x","cosh"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.cosh(t);return n([t]),r},n,null,"Cosh")}});const Pr=Re({cumsum_:function(e,t=0,n=!1,r=!1){const o=_e(e,"x","cumsum"),s={x:o},a={axis:t,exclusive:n,reverse:r};return Ie.runKernelFunc((e,s)=>{const a=Cn([t],o.rank);let i=o;null!=a&&(i=zt(o,a));const u=zn(1,o.rank)[0];let l=e.cumsum(i,u,n,r);if(s([o]),null!=a){const e=Pn(a);l=zt(l,e)}return l},s,null,"Cumsum",a)}});const zr=Re({depthToSpace_:function(e,t,n="NHWC"){const r=_e(e,"x","depthToSpace"),o="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];s(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),s(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),s(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const u={x:r},l={blockSize:t,dataFormat:n};return Ie.runKernelFunc(e=>e.depthToSpace(r,t,n),u,null,"DepthToSpace",l)}});const Lr=Re({depthwiseConv2d_:function(e,t,n,r,o="NHWC",a=[1,1],i){const u=_e(e,"x","depthwiseConv2d"),l=_e(t,"filter","depthwiseConv2d");let c=u,p=!1;3===u.rank&&(p=!0,c=Rt(u,[1,u.shape[0],u.shape[1],u.shape[2]])),s(4===c.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),s(4===l.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+l.rank+"."),s(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),null!=i&&s(h(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d={x:c,filter:l},f={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i},m=Ie.runKernelFunc((e,t)=>{null==a&&(a=[1,1]),s(or(n,a),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const o=Yn(c.shape,l.shape,n,a,r,i,!0),u=e.depthwiseConv2D(c,l,o);return t([c,l]),u},d,null,"DepthwiseConv2dNative",f);return p?Rt(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const qr=Re({diag_:function(e){const t=_e(e,"x","diag"),n={x:t};return Ie.runKernelFunc(n=>{const r=Rt(t,[t.size]),o=n.diag(r),s=[...e.shape,...e.shape];return Rt(o,s)},n,null,"Diag")}});const Or=Re({dilation2d_:function(e,t,n,r,o=[1,1],a="NHWC"){const i=_e(e,"x","dilation2d"),u=_e(t,"filter","dilation2d");s(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),s(3===u.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+u.rank+"."),s("NHWC"===a,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+a);let l=i,c=!1;3===i.rank&&(l=Rt(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:l,filter:u},p={strides:n,pad:r,dilations:o},d=Ie.runKernel("Dilation2D",h,p);return c?Rt(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function Wr(e,t){const n=[];for(let r=0;r<t.length;r++){const o=e[e.length-r-1],s=t.length-r-1,a=t[s];(null==o||1===o&&a>1)&&n.unshift(s)}return n}function Kr(e,t){const n=[],r=Math.max(e.length,t.length);for(let o=0;o<r;o++){let r=e[e.length-o-1];null==r&&(r=1);let s=t[t.length-o-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const Gr=Re({equal_:function(e,t){let n=_e(e,"a","equal"),r=_e(t,"b","equal");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc(e=>e.equal(n,r),o,null,"Equal")}});const Ur=Re({where_:function(e,t,n){const r=_e(t,"a","where"),o=_e(n,"b","where"),i=_e(e,"condition","where","bool"),u=Kr(r.shape,o.shape),l=vr(r,u),c=vr(o,u);1===i.rank&&s(i.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==i.rank&&a(i.shape,c.shape,"Error in where: ");const h={condition:i,t:l,e:c};return Ie.runKernelFunc((e,t)=>{const n=e.select(i,l,c);return t([i]),n},h,null,"SelectV2")}});const Vr=Re({zerosLike_:function(e){const t=_e(e,"x","zerosLike"),n={x:t};return Ie.runKernelFunc(e=>e.zerosLike(t),n,null,"ZerosLike")}});const Hr=Re({divNoNan_:function(e,t){let n=_e(e,"a","div"),r=_e(t,"b","div");[n,r]=we(n,r);const o=In(n,r),s=Vr(o),a=Gr(r,s);return Ur(a,s,o)}});const jr=Re({dot_:function(e,t){const n=_e(e,"t1","dot"),r=_e(t,"t2","dot");s(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const o=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(s(o===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${a}.`),1===n.rank&&1===r.rank){const e=Rt(n,[1,-1]),t=Rt(r,[-1,1]),o=Ct(e,t);return Rt(o,[])}if(1===n.rank&&2===r.rank){const e=Rt(n,[1,-1]),t=Rt(r,[r.shape[0],r.shape[1]]),o=Ct(e,t);return Rt(o,[o.size])}if(2===n.rank&&1===r.rank){const e=Rt(r,[-1,1]),t=Ct(n,e);return Rt(t,[t.size])}{const e=Rt(r,[r.shape[0],r.shape[1]]);return Ct(n,e)}}});const Jr=Re({elu_:function(e){const t=_e(e,"x","elu"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.elu(t);return n([r]),r},n,null,"Elu")}});const Yr=Re({erf_:function(e){let t=_e(e,"x","erf");s("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=wt(t,"float32"));const n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.erf(t);return n([t]),r},n,null,"Erf")}});const Zr=Re({exp_:function(e){const t=_e(e,"x","exp"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.exp(t);return n([r]),r},n,null,"Exp")}});const Xr=Re({expandDims_:function(e,t=0){const n=_e(e,"x","expandDims",null);s(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return t<0&&(s(-(n.rank+1)<=t,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),t=n.rank+t+1),r.splice(t,0,1),Rt(n,r)}});const Qr=Re({expm1_:function(e){const t=_e(e,"x","expm1"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.expm1(t);return n([t]),r},n,null,"Expm1")}});const eo=Re({tile_:function(e,t){const n=_e(e,"x","tile",null);s(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r=[n],o={x:n},a={reps:t};return Ie.runKernelFunc((e,r)=>{const o=e.tile(n,t);return r([n]),o},o,null,"Tile",a,r)}});const to=Re({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const o=yt([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)o.set(1,e,e);const a=Rt(o.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return eo(Xr(a,0),[n[0],1,1]);if(2===n.length)return eo(Xr(Xr(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return eo(Xr(Xr(Xr(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function no(e,t,n){const r={shape:e,value:t,dtype:n};return Ie.runKernelFunc(r=>r.fill(e,t,n),{},null,"Fill",r)}const ro=Re({floor_:function(e){const t=_e(e,"x","floor"),n={x:t};return Ie.runKernelFunc(e=>e.floor(t),n,null,"Floor")}});function oo(e,t,n){const r=e.shape[n],o=[];let s=1,a=1;for(let t=0;t<n;t++)o.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)o.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)o.push(e.shape[t]),a*=e.shape[t];return{batchSize:s,sliceSize:a,dimSize:r,outputShape:o}}var so=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:function(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=A(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=A(e,n+1);return n},computeOutShape:function(e,t,n){const r=[],o=e.length;for(let s=0;s<o;s++)s!==t?r.push(e[s]):r.push(n);return r},collectGatherOpShapeInfo:oo});const ao=Re({gather_:function(e,t,n=0){const r=_e(e,"x","gather"),o=_e(t,"indices","gather","int32"),s={x:r,indices:o},a={axis:n};return Ie.runKernelFunc((e,t)=>{const s=f(n,r.shape)[0],a=oo(r,o,s),i=e.gather(r,Rt(o,[o.size]),s);return t([r,o]),Rt(i,a.outputShape)},s,null,"GatherV2",a)}});const io=Re({greater_:function(e,t){let n=_e(e,"a","greater"),r=_e(t,"b","greater");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc(e=>e.greater(n,r),o,null,"Greater")}});const uo=Re({greaterEqual_:function(e,t){let n=_e(e,"a","greaterEqual"),r=_e(t,"b","greaterEqual");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.greaterEqual(n,r);return t([n,r]),o},o,null,"GreaterEqual")}});const lo=Re({imag_:function(e){const t=_e(e,"input","imag"),n={input:t};return Ie.runKernelFunc(e=>e.imag(t),n,null,"Imag")}});const co=Re({isFinite_:function(e){const t=_e(e,"x","isFinite"),n={x:t};return Ie.runKernelFunc(e=>e.isFinite(t),n,null,"IsFinite")}});const ho=Re({isInf_:function(e){const t=_e(e,"x","isInf"),n={x:t};return Ie.runKernelFunc(e=>e.isInf(t),n,null,"IsInf")}});const po=Re({isNaN_:function(e){const t=_e(e,"x","isNaN"),n={x:t};return Ie.runKernelFunc(e=>e.isNaN(t),n,null,"IsNan")}});const fo=Re({maximum_:function(e,t){let n=_e(e,"a","maximum"),r=_e(t,"b","maximum");[n,r]=we(n,r),"bool"===n.dtype&&(n=wt(n,"int32"),r=wt(r,"int32")),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.maximum(n,r);return t([n,r]),o},o,null,"Maximum")}});function mo(e,t){if((v(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&v(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Pe(e,[],[],t)}const go=Re({leakyRelu_:function(e,t=.2){const n=_e(e,"x","leakyRelu");return fo(Nn(mo(t),n),n)}});const bo=Re({less_:function(e,t){let n=_e(e,"a","less"),r=_e(t,"b","less");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc(e=>e.less(n,r),o,null,"Less")}});const yo=Re({lessEqual_:function(e,t){let n=_e(e,"a","lessEqual"),r=_e(t,"b","lessEqual");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.lessEqual(n,r);return t([n,r]),o},o,null,"LessEqual")}});const wo=Re({localResponseNormalization_:function(e,t=5,n=1,r=1,o=.5){const a=_e(e,"x","localResponseNormalization");s(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),s(h(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,u=!1;3===a.rank&&(u=!0,i=Rt(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},c={depthRadius:t,bias:n,alpha:r,beta:o},p=Ie.runKernelFunc((e,s)=>{const a=e.localResponseNormalization4D(i,t,n,r,o);return s([i,a]),a},l,null,"LRN",c);return u?Rt(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const ko=Re({log_:function(e){const t=_e(e,"x","log"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.log(t);return n([t]),r},n,null,"Log")}});const vo=Re({log1p_:function(e){const t=_e(e,"x","log1p"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.log1p(t);return n([t]),r},n,null,"Log1p")}});function xo(e,t){s(F(e),()=>"The f passed in variableGrads(f) must be a function"),s(null==t||Array.isArray(t)&&t.every(e=>e instanceof he),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in Ie.registeredVariables)t.push(Ie.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,o=t.length;s((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:a,grads:i}=Ie.gradients(e,t,null,!0);s(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return t.forEach((e,t)=>{null!=i[t]&&(u[e.name]=i[t])}),null!=r&&r.forEach(e=>u[e.name]=null),{value:a,grads:u}}function So(e){return Ie.customGrad(e)}function Eo(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const Do=Re({neg_:function(e){const t=_e(e,"x","neg"),n={x:t};return Ie.runKernelFunc(e=>e.neg(t),n,null,"Negate")}});const Io=Re({softplus_:function(e){const t=_e(e,"x","softplus"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.softplus(t);return n([t]),r},n,null,"Softplus")}});const No=Re({logSigmoid_:function(e){const t=_e(e,"x","logSigmoid");return So(e=>({value:Do(Io(Do(e))),gradFunc:t=>Nn(t,hr(Do(e)))}))(t)}});const Fo=Re({max_:function(e,t=null,n=!1){const r=_e(e,"x","max"),o={x:r},s={reductionIndices:t,keepDims:n};return Ie.runKernelFunc((e,o)=>{let s=f(t,r.shape);const a=Cn(s,r.rank);let i=r;null!=a&&(i=zt(r,a),s=zn(s.length,i.rank));const u=e.max(i,s);null!=a&&i.dispose();let l=u;if(n){const e=Rn(l.shape,f(t,r.shape));l=Rt(l,e),u.dispose()}return o([r,l]),l},o,null,"Max",s)}});const Ao=Re({sub_:function(e,t){let n=_e(e,"a","sub"),r=_e(t,"b","sub");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.subtract(n,r);return t([n,r]),o},o,null,"Sub")}});const Mo=Re({sum_:function(e,t=null,n=!1){let r=_e(e,"x","sum");"bool"===r.dtype&&(r=wt(r,"int32"));const o={x:r},s={axis:t,keepDims:n};return Ie.runKernelFunc((e,o)=>{o([r]);const s=f(t,r.shape),a=Cn(s,r.rank);let i=s,u=r;null!=a&&(u=zt(r,a),i=zn(i.length,r.rank));let l=e.sum(u,i);if(n){const e=Rn(l.shape,s);l=Rt(l,e)}return l},o,null,"Sum",s)}});const To=Re({logSoftmax_:function(e,t=-1){const n=_e(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r={logits:n},o={axis:t};return Ie.runKernelFunc((n,r)=>{const o=Fo(e,t,!0),s=Ao(e,o),a=Ao(wt(s,"float32"),ko(Mo(Zr(s),t,!0)));return r([a]),a},r,null,"LogSoftmax",o)}});const $o=Re({logSumExp_:function(e,t=null,n=!1){const r=_e(e,"x","logSumExp"),o=f(t,r.shape),s=Fo(r,o,!0),a=Ao(r,s),i=Zr(a),u=Mo(i,o),l=ko(u),c=En(Rt(s,l.shape),l);if(n){const e=Rn(c.shape,o);return Rt(c,e)}return c}});const _o=Re({logicalAnd_:function(e,t){const n=_e(e,"a","logicalAnd","bool"),r=_e(t,"b","logicalAnd","bool");Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc(e=>e.logicalAnd(n,r),o,null,"LogicalAnd")}});const Bo=Re({logicalNot_:function(e){const t=_e(e,"x","logicalNot","bool"),n={x:t};return Ie.runKernelFunc(e=>e.logicalNot(t),n,null,"LogicalNot")}});const Ro=Re({logicalOr_:function(e,t){const n=_e(e,"a","logicalOr","bool"),r=_e(t,"b","logicalOr","bool");Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc(e=>e.logicalOr(n,r),o,null,"LogicalOr")}});const Co=Re({logicalXor_:function(e,t){const n=_e(e,"a","logicalXor","bool"),r=_e(t,"b","logicalXor","bool");return Kr(n.shape,r.shape),_o(Ro(e,t),Bo(_o(e,t)))}});const Po=Re({maxPool_:function(e,t,n,r,o){const a=_e(e,"x","maxPool");let i=a,u=!1;3===a.rank&&(u=!0,i=Rt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),s(or(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=o&&s(h(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const l={x:i},p={filterSize:t,strides:n,pad:r,dimRoundingMode:o},d=Ie.runKernelFunc((e,s)=>{const a=jn(i.shape,t,n,1,r,o);let u;return u=1===a.filterWidth&&1===a.filterHeight&&c(a.inShape,a.outShape)?i.clone():e.maxPool(i,a),s([i,u]),u},l,null,"MaxPool",p);return u?Rt(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const zo=Re({maxPool3d_:function(e,t=[1,1,1],n,r,o,a="NDHWC",i){null==i?i=[1,1,1]:kn("dilations is deprecated, this field will be gone in v3.0.0.");const u=_e(e,"x","maxPool3d");let l=u,c=!1;4===u.rank&&(c=!0,l=Rt(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),s(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),s("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),s(or(n,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=o&&s(h(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const p={x:l},d={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:a,dilations:i},f=Ie.runKernelFunc((e,s)=>{null==i&&(i=[1,1,1]);const u=Jn(l.shape,t,n,i,r,o,a),c=e.maxPool3d(l,u);return s([l,c]),c},p,null,"MaxPool3D",d);return c?Rt(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});const Lo=Re({maxPoolWithArgmax_:function(e,t,n,r,o=!1){const s={x:_e(e,"x","maxPoolWithArgmax")},a={filterSize:t,strides:n,pad:r,includeBatchInIndex:o},i=Ie.runKernel("MaxPoolWithArgmax",s,a);return{result:i[0],indexes:i[1]}}});function qo(e,t="float32"){if("complex64"===t){const t=qo(e,"float32"),n=qo(e,"float32");return Ce(t,n)}const n=_(l(e),t);return Ie.makeTensor(n,e,t)}function Oo(e,t="float32"){if("complex64"===t){const t=Oo(e,"float32"),n=qo(e,"float32");return Ce(t,n)}const n=$(l(e),t);return Ie.makeTensor(n,e,t)}const Wo=Re({mean_:function(e,t=null,n=!1){const r=_e(e,"x","mean"),o=f(t,r.shape),s=l(Bn(r.shape,o)[1]),a={x:r},i={axis:t,keepDims:n},u=()=>{const e=mo(s),o=e.dtype===r.dtype?r:wt(r,e.dtype),a=In(o,e);return Mo(a,t,n)};return So(e=>({value:Ie.runKernelFunc(u,a,null,"Mean",i),gradFunc:t=>{const n=e.shape.slice();o.forEach(e=>{n[e]=1});const r=Rt(t,n);return In(Nn(r,Oo(e.shape,"float32")),s)}}))(r)}});const Ko=Re({min_:function(e,t=null,n=!1){const r=_e(e,"x","min"),o={x:r},s={axis:t,keepDims:n};return Ie.runKernelFunc((e,o)=>{const s=f(t,r.shape);let a=s;const i=Cn(a,r.rank);let u=r;null!=i&&(u=zt(r,i),a=zn(a.length,r.rank));const l=e.min(u,a);null!=i&&u.dispose();let c=l;if(n){const e=Rn(c.shape,s);c=Rt(l,e),l.dispose()}return o([r,c]),c},o,null,"Min",s)}});const Go=Re({minimum_:function(e,t){let n=_e(e,"a","minimum"),r=_e(t,"b","minimum");[n,r]=we(n,r),"bool"===n.dtype&&(n=wt(n,"int32"),r=wt(r,"int32")),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.minimum(n,r);return t([n,r]),o},o,null,"Minimum")}});const Uo=Re({mirrorPad_:function(e,t,n){s("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=_e(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const o="reflect"===n?1:0;for(let e=0;e<r.rank;e++)s(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),s(t[e][0]>=0&&t[e][0]<=r.shape[e]-o&&t[e][1]>=0&&t[e][1]<=r.shape[e]-o,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-o} or less than 0 for input of shape `+r.shape);const a={paddings:t,mode:n},i={x:r};return Ie.runKernel("MirrorPad",i,a)}});const Vo=Re({mod_:function(e,t){let n=_e(e,"a","mod"),r=_e(t,"b","mod");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.mod(n,r);return t([n,r]),o},o,null,"Mod")}});const Ho=Re({square_:function(e){const t=_e(e,"x","square"),n=[t];return Ie.runKernelFunc((e,n)=>(n([t]),e.square(t)),{x:t},null,"Square",{},n,[])}});const jo=Re({moments_:function(e,t=null,n=!1){const r=f(t,(e=_e(e,"x","moments")).shape),o=Wo(e,r,n);let s=o.shape;n||(s=Rn(o.shape,r));const a=Ho(Ao(wt(e,"float32"),Rt(o,s)));return{mean:o,variance:Wo(a,r,n)}}});const Jo=Re({multiRNNCell_:function(e,t,n,r){const o=_e(t,"data","multiRNNCell"),s=Be(n,"c","multiRNNCell"),a=Be(r,"h","multiRNNCell");let i=o;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],a[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});const Yo=Re({multinomial_:function(e,t,n,r=!1){const o=_e(e,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);n=n||Math.random();const i=1===a?Rt(o,[1,-1]):o,u=Ie.runKernelFunc(e=>e.multinomial(i,r,t,n),{logits2D:i});return 1===a?Rt(u,[u.size]):u}});const Zo=Re({notEqual_:function(e,t){let n=_e(e,"a","notEqual"),r=_e(t,"b","notEqual");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc(e=>e.notEqual(n,r),o,null,"NotEqual")}});const Xo=Re({real_:function(e){const t=_e(e,"input","real"),n={input:t};return Ie.runKernelFunc(e=>e.real(t),n,null,"Real")}});const Qo=Re({onesLike_:function(e){const t=_e(e,"x","onesLike"),n={x:t};return Ie.runKernelFunc((e,n)=>{if("complex64"===t.dtype){const e=Qo(Xo(t)),n=Vr(lo(t));return Ce(e,n)}return e.onesLike(t)},n,null,"OnesLike")}});const es=Re({outerProduct_:function(e,t){const n=_e(e,"v1","outerProduct"),r=_e(t,"v2","outerProduct");s(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const o=Rt(n,[-1,1]),a=Rt(r,[1,-1]);return Ct(o,a)}});const ts=Re({pad_:function(e,t,n=0){const r=_e(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},s={x:r};return Ie.runKernelFunc((e,o)=>(o([r]),e.pad(r,t,n)),s,null,"PadV2",o)}});const ns=Re({pad1d_:function(e,t,n=0){return s(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),ts(e,[t],n)}});const rs=Re({pad2d_:function(e,t,n=0){return s(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),ts(e,t,n)}});const os=Re({pad3d_:function(e,t,n=0){return s(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),ts(e,t,n)}});const ss=Re({pad4d_:function(e,t,n=0){return s(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),ts(e,t,n)}});const as=Re({spaceToBatchND_:function(e,t,n){const r=_e(e,"x","spaceToBatchND");s(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),s(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),s(r.shape.reduce((e,r,o)=>o>0&&o<=t.length?e&&(r+n[o-1][0]+n[o-1][1])%t[o-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const o={x:r},a={blockShape:t,paddings:n};return Ie.runKernelFunc(e=>e.spaceToBatchND(r,t,n),o,null,"SpaceToBatchND",a)}});const is=Re({pool_:function(e,t,n,r,o,a){null==o&&(o=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=_e(e,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=Rt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),s(or(a,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${o}'`);const c=jn(u.shape,t,a,o,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),o=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],o[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map(e=>e[0]),o=n.map(e=>e[1]),s=e.concat(r,o),a=t.map((e,t)=>(e-s[t]%e)%e),i=o.map((e,t)=>e+a[t]),u=t.map((e,t)=>[r[t],i[t]]),l=t.map((e,t)=>[0,a[t]]);return[u,l]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",b=d?u:as(u,h,f),y=("avg"===n?()=>ar(b,t,a,g):()=>Po(b,t,a,g))(),w=d?y:mr(y,h,m);return l?Rt(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});const us=Re({pow_:function(e,t){let n=_e(e,"base","pow"),r=_e(t,"exp","pow");[n,r]=we(n,r);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.pow(n,r);return t([n,r,o]),o},o,null,"Pow")}});const ls=Re({prelu_:function(e,t){const n=_e(e,"x","prelu"),r=_e(t,"alpha","prelu"),o={x:n,alpha:r};return Ie.runKernelFunc((e,t)=>{const o=e.prelu(n,r);return t([n,r]),o},o,null,"Prelu")}});const cs=Re({prod_:function(e,t=null,n=!1){let r=_e(e,"x","prod");"bool"===r.dtype&&(r=wt(r,"int32"));const o={x:r},s={axis:t,keepDims:n};return Ie.runKernelFunc(e=>{const o=f(t,r.shape),s=Cn(o,r.rank);let a=o,i=r;null!=s&&(i=zt(r,s),a=zn(a.length,r.rank));let u=e.prod(i,a);if(n){const e=Rn(u.shape,o);u=Rt(u,e)}return u},o,null,"Prod",s)}});const hs=Re({rand_:function(e,t,n){const r=l(e);let o=null;if(null==n||"float32"===n)o=new Float32Array(r);else if("int32"===n)o=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);o=new Uint8Array(r)}for(let e=0;e<r;e++)o[e]=t();return Ie.makeTensor(o,e,n)}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function ps(e,t){return e(t={exports:{}},t.exports),t.exports}var ds=ps((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,e,!1)})),fs=ps((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,e,!1)})),ms=ps((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,e,!1)})),gs=ps((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,o=t.i;return e=r[o],n=(e^=e>>>7)^e<<24,n^=(e=r[o+1&7])^e>>>10,n^=(e=r[o+3&7])^e>>>3,n^=(e=r[o+4&7])^e<<7,e=r[o+7&7],n^=(e^=e<<13)^e<<9,r[o]=n,t.i=o+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&(s.x&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,e,!1)})),bs=ps((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,s=t.i;return t.w=r=r+1640531527|0,n=o[s+34&127],e=o[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,o,s,a,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),o=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,o=0==(n=i[127&s]^=r+a)?o+1:0);for(o>=128&&(i[127&(t&&t.length||0)]=-1),o=127,s=512;s>0;--s)r=i[o+34&127],n=i[o=o+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[o]=r^n;e.w=a,e.X=i,e.i=o}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&(s.X&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,e,!1)})),ys=ps((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,o=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^o,o=o-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^o,t.a=o-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&o(s,n),a.state=function(){return o(n,{})}),a}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,e,!1)})),ws=ps((function(e){!function(t,n){var r,o=this,s=n.pow(256,6),a=n.pow(2,52),i=2*a;function u(e,u,d){var f=[],m=h(function e(t,n){var r,o=[],s=typeof t;if(n&&"object"==s)for(r in t)try{o.push(e(t[r],n-1))}catch(e){}return o.length?o:"string"==s?t:t+"\0"}((u=1==u?{entropy:!0}:u||{}).entropy?[e,p(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(256):(e=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(e)),p(e)}catch(e){var n=o.navigator,s=n&&n.plugins;return[+new Date,o,s,o.screen,p(t)]}}():e,3),f),g=new l(f),b=function(){for(var e=g.g(6),t=s,n=0;e<a;)e=256*(e+n),t*=256,n=g.g(1);for(;e>=i;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|g.g(4)},b.quick=function(){return g.g(4)/4294967296},b.double=b,h(p(g.S),t),(u.pass||d||function(e,t,r,o){return o&&(o.S&&c(o,g),e.state=function(){return c(g,{})}),r?(n.random=e,t):e})(b,m,"global"in u?u.global:this==n,u.state)}function l(e){var t,n=e.length,r=this,o=0,s=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);o<256;)a[o]=o++;for(o=0;o<256;o++)a[o]=a[s=255&s+e[o%n]+(t=a[o])],a[s]=t;(r.g=function(e){for(var t,n=0,o=r.i,s=r.j,a=r.S;e--;)t=a[o=255&o+1],n=256*n+a[255&(a[o]=a[s=255&s+t])+(a[s]=t)];return r.i=o,r.j=s,n})(256)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var n,r=e+"",o=0;o<r.length;)t[255&o]=255&(n^=19*t[255&o])+r.charCodeAt(o++);return p(t)}function p(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=u,h(n.random(),t),e.exports){e.exports=u;try{r=require("crypto")}catch(e){}}}([],Math)}));ws.alea=ds,ws.xor128=fs,ws.xorwow=ms,ws.xorshift7=gs,ws.xor4096=bs,ws.tychei=ys;var ks=ws.alea;class vs{constructor(e,t,n,r,o){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=ks(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class xs{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const o=r||Math.random();this.randu=ks(o.toString()),this.randn=new vs(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,o,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),o=this.randu(),o<t||Math.log(o)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ss{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ks(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Es=Re({randomGamma_:function(e,t,n=1,r="float32",o){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new xs(t,n,r,o),a=yt(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const Ds=Re({randomNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new vs(t,n,r,!1,o),a=yt(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const Is=Re({randomUniform_:function(e,t=0,n=1,r="float32",o){const s=yt(e,r),a=new Ss(t,n,null,o);for(let e=0;e<s.values.length;e++)s.values[e]=a.nextValue();return s.toTensor()}});function Ns(e,t){i(e);const n=Te(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Pe(e,null,n,t)}function Fs(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:r};return Ie.runKernelFunc(()=>{if(e===t||e<t&&n<0||t<e&&n>1)return qo([0],r);const o=_(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return Ns(o,r)},{},null,"Range",o)}const As=Re({reciprocal_:function(e){const t=_e(e,"x","reciprocal"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.reciprocal(t);return n([t]),r},n,null,"Reciprocal")}});const Ms=Re({relu_:function(e){const t=_e(e,"x","relu"),n={x:t};return Ie.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?wt(t,"int32"):e.relu(t)),n,null,"Relu")}});const Ts=Re({relu6_:function(e){const t=_e(e,"x","relu6"),n={x:t};return Ie.runKernelFunc((e,n)=>(n([t]),"bool"===t.dtype?wt(t,"int32"):e.relu6(t)),n,null,"Relu6")}});const $s=Re({reverse_:function(e,t){const n=_e(e,"x","reverse"),r={x:n},o={dims:t};return Ie.runKernelFunc(e=>{const r=f(t,n.shape);if(0===n.rank)return kt(n);const o=e.reverse(n,r);return Rt(o,n.shape)},r,null,"Reverse",o)}});const _s=Re({reverse1d_:function(e){const t=_e(e,"x","reverse");return s(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),$s(t,0)}});const Bs=Re({reverse2d_:function(e,t){const n=_e(e,"x","reverse");return s(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),$s(n,t)}});const Rs=Re({reverse3d_:function(e,t){const n=_e(e,"x","reverse");return s(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),$s(n,t)}});const Cs=Re({reverse4d_:function(e,t){const n=_e(e,"x","reverse");return s(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),$s(n,t)}});const Ps=Re({round_:function(e){const t=_e(e,"x","round"),n={x:t};return Ie.runKernelFunc(e=>e.round(t),n,null,"Round")}});const zs=Re({rsqrt_:function(e){const t=_e(e,"x","rsqrt"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.rsqrt(t);return n([t]),r},n,null,"Rsqrt")}});const Ls=Re({selu_:function(e){const t=_e(e,"x","selu"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.selu(t);return n([t]),r},n,null,"Selu")}});const qs=Re({separableConv2d_:function(e,t,n,r,o,a=[1,1],i="NHWC"){const u=_e(e,"x","separableConv2d"),l=_e(t,"depthwiseFilter","separableConv2d"),c=_e(n,"pointwiseFilter","separableConv2d");let h=u,p=!1;if(3===u.rank&&(p=!0,h=Rt(u,[1,u.shape[0],u.shape[1],u.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),s(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),s(4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),s(1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),s(1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];s(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const m=Lr(h,l,r,o,i,a),g=Fr(m,c,1,"valid",i);return p?Rt(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Os=async function(e,t){const n=_e(e,"x","setdiff1d"),r=_e(t,"y","setdiff1d");s(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),s(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const o=await n.data(),a=await r.data(),i=new Set(a);let u=0;for(let e=0;e<o.length;e++)i.has(o[e])||u++;const l=new ie([u],n.dtype),c=new ie([u],"int32");for(let e=0,t=0;e<o.length;e++)i.has(o[e])||(l.values[t]=o[e],c.values[t]=e,t++);return[l.toTensor(),c.toTensor()]};const Ws=Re({sign_:function(e){const t=_e(e,"x","sign"),n={x:t};return Ie.runKernelFunc(e=>e.sign(t),n,null,"Sign")}});const Ks=Re({sin_:function(e){const t=_e(e,"x","sin"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.sin(t);return n([t]),r},n,null,"Sin")}});const Gs=Re({sinh_:function(e){const t=_e(e,"x","sinh"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.sinh(t);return n([t]),r},n,null,"Sinh")}});const Us=Re({slice1d_:function(e,t,n){const r=_e(e,"x","slice1d");return s(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),pr(r,[t],[n])}});const Vs=Re({slice2d_:function(e,t,n){const r=_e(e,"x","slice2d");return s(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),pr(r,t,n)}});const Hs=Re({slice3d_:function(e,t,n){const r=_e(e,"x","slice3d");return s(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),pr(r,t,n)}});const js=Re({slice4d_:function(e,t,n){const r=_e(e,"x","slice4d");return s(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),pr(r,t,n)}});const Js=Re({softmax_:function(e,t=-1){const n=_e(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},o={dim:t};return Ie.runKernelFunc((e,r)=>{const o=e.softmax(n,t);return r([o]),o},r,null,"Softmax",o)}});const Ys=Re({fft_:function(e){s("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Ie.runKernelFunc(t=>{const n=e.shape[e.shape.length-1],r=e.size/n,o=e.as2D(r,n);return t.fft(o).reshape(e.shape)},t,null,"FFT")}});const Zs=Re({ifft_:function(e){s("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Ie.runKernelFunc(t=>{const n=e.shape[e.shape.length-1],r=e.size/n,o=Rt(e,[r,n]),s=t.ifft(o);return Rt(s,e.shape)},t,null,"IFFT")}});const Xs=Re({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const o=Rt(e,[n,t]);r=Zs(o)}else{const o=[n,2*(t-1)],s=Rt(Xo(e),[n,t]),a=Rt(lo(e),[n,t]),i=$s(pr(s,[0,1],[n,t-2]),1),u=Nn($s(pr(a,[0,1],[n,t-2]),1),mo(-1)),l=cr([s,i],1),c=cr([a,u],1),h=Rt(Ce(l,c),[o[0],o[1]]);r=Zs(h)}if(r=Xo(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Rt(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});function Qs(e,t,n=0){let r=[];if("number"==typeof t)s(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{s(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(-1!==o){const r=t.reduce((e,t)=>t>0?e+t:e);t[o]=e.shape[n]-r}s(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}const ea=Re({split_:function(e,t,n=0){const r=_e(e,"x","split"),o={x:r},s={numOrSizeSplits:t,axis:n};return Ie.runKernelFunc((e,o)=>{const s=f(n,r.shape)[0],a=Qs(r,t,s);return e.split(r,a,s)},o,null,"SplitV",s)}});const ta=Re({rfft_:function(e,t){s("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let o;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,o=pr(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,o=cr([e,qo(r)],e.shape.length-1),n=t}else o=e;const a=Vr(o),i=Rt(Ce(o,a),[r,n]),u=Ys(i),l=Math.floor(n/2)+1,c=Xo(u),h=lo(u),p=ea(c,[l,n-l],c.shape.length-1),d=ea(h,[l,n-l],h.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=l,Rt(Ce(p[0],d[0]),f)}});const na=Re({sqrt_:function(e){const t=_e(e,"x","sqrt"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.sqrt(t);return n([t]),r},n,null,"Sqrt")}});const ra=Re({squaredDifference_:function(e,t){let n=_e(e,"a","squaredDifference"),r=_e(t,"b","squaredDifference");[n,r]=we(n,r),Kr(n.shape,r.shape);const o={a:n,b:r};return Ie.runKernelFunc((e,t)=>{const o=e.squaredDifference(n,r);return t([n,r]),o},o,null,"SquaredDifference",{})}});const oa=Re({squeeze_:function(e,t){const n=_e(e,"x","squeeze");return Rt(n,m(n.shape,t).newShape)}});const sa=Re({stack_:function(e,t=0){const n=Be(e,"tensors","stack");if(s(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Xr(n[0],t);const r=n[0].rank,o=n[0].shape,i=n[0].dtype;s(t<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(e=>{a(o,e.shape,"All tensors passed to stack must have matching shapes"),s(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=n.map(e=>Xr(e,t));return cr(u,t)}});const aa=Re({step_:function(e,t=0){const n=_e(e,"x","step"),r={x:n},o={alpha:t};return Ie.runKernelFunc(e=>e.step(n,t),r,null,"Step",o)}});const ia=Re({stridedSlice_:function(e,t,n,r,o=0,s=0,a=0,i=0,u=0){let l=_e(e,"x","stridedSlice");const c={x:l},h={begin:t,end:n,strides:r,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return Ie.runKernelFunc(e=>{null==r&&(r=new Array(t.length));const c=Xt(a);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-t.length,p=Xt(i),d=l.shape.slice();p.forEach(e=>{t[e]=0,n[e]=1,d.splice(e,0,1)}),l=Rt(l,d);const{begin:f,end:m,strides:g}=rn(l.shape,c,h,t,n,r,o,s,a);t=f,n=m,r=g;const b=Xt(u);b.forEach(e=>{n[e]=t[e]+1,r[e]=1});const y=Qt(t,n,r),w=y.filter((e,t)=>-1===b.indexOf(t));if(r.every(e=>1===e))return Rt(pr(l,t,y),w);const k=e.stridedSlice(l,t,n,r);return Rt(k,w)},c,null,"StridedSlice",h)}});const ua=Re({tan_:function(e){const t=_e(e,"x","tan"),n={x:t};return Ie.runKernelFunc((e,n)=>{const r=e.tan(t);return n([t]),r},n,null,"Tan")}});function la(e,t,n){if(i(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Te(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Pe(e,t,r,n)}const ca=Re({topk_:function(e,t=1,n=!0){const r=_e(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=r.shape[r.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+t);const s={x:r},a={k:t,sorted:n},[i,u]=Ie.runKernelFunc(e=>e.topk(r,t,n),s,null,"TopK",a);return{values:i,indices:u}}});const ha=Re({truncatedNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new vs(t,n,r,!0,o),a=yt(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}});const pa=Re({unique_:function(e,t=0){const n=_e(e,"x","unique",null);s(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},o={axis:t},[a,i]=Ie.runKernel("Unique",r,o);return{values:a,indices:i}}});const da=Re({unsortedSegmentSum_:function(e,t,n){const r=_e(e,"x","unsortedSegmentSum"),o=_e(t,"segmentIds","unsortedSegmentSum","int32");s(h(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:o},i={numSegments:n};return Ie.runKernelFunc((e,t)=>{const s=e.unsortedSegmentSum(r,o,n);return t([o]),s},a,null,"UnsortedSegmentSum",i)}});const fa=Re({unstack_:function(e,t=0){const n=_e(e,"x","unstack");s(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),t<0&&(t+=n.shape.length);const r={value:n},o={axis:t};return Ie.runKernelFunc(e=>e.unstack(n,t),r,null,"Unpack",o)}});function ma(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=yt(e,"int32"),o=yt([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),a=t*e.length;o.values.set(s,a)}return o.toTensor()}const ga=async function(e){const t=_e(e,"condition","whereAsync","bool"),n=await t.data(),r=ma(t.shape,n);return e!==t&&t.dispose(),r};const ba=async function(e,t,n){const r=_e(e,"tensor","boolMask"),o=_e(t,"mask","boolMask","bool"),i=null==n?0:n,u=o.rank,l=r.shape;s(u>0,()=>"mask cannot be scalar"),a(l.slice(i,i+u),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let e=i;e<i+u;e++)c*=l[e];const h=l.slice(0,i).concat([c],l.slice(i+u)),p=Rt(r,h),d=Rt(o,[-1]),f=await ga(d),m=oa(f,[1]),g=ao(p,m,i);return e!==r&&r.dispose(),t!==o&&o.dispose(),m.dispose(),p.dispose(),d.dispose(),f.dispose(),g};const ya=Re({equalStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","equalStrict"),r=_e(t,"b","equalStrict");return a(n.shape,r.shape,"Error in equalStrict: "),Gr(n,r)}}),wa=Re({greaterEqualStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","greaterEqualStrict"),r=_e(t,"b","greaterEqualStrict");return a(n.shape,r.shape,"Error in greaterEqualStrict: "),uo(n,r)}}),ka=Re({greaterStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","greaterStrict"),r=_e(t,"b","greaterStrict");return a(n.shape,r.shape,"Error in greaterStrict: "),io(n,r)}}),va=Re({lessEqualStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","lessEqualStrict"),r=_e(t,"b","lessEqualStrict");return a(n.shape,r.shape,"Error in lessEqualStrict: "),yo(n,r)}}),xa=Re({lessStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","lessStrict"),r=_e(t,"b","lessStrict");return a(n.shape,r.shape,"Error in lessStrict: "),bo(n,r)}}),Sa=Re({notEqualStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","notEqualStrict"),r=_e(t,"b","notEqualStrict");return a(n.shape,r.shape,"Error in notEqualStrict: "),Zo(n,r)}});const Ea=Re({addStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","addStrict"),r=_e(t,"b","addStrict");return a(n.shape,r.shape,"Error in addStrict: "),En(n,r)}}),Da=Re({divStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","div"),r=_e(t,"b","div");return a(n.shape,r.shape,"Error in divideStrict: "),In(n,r)}}),Ia=Re({maximumStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","maximumStrict"),r=_e(t,"b","maximumStrict");return a(n.shape,r.shape,"Error in maximumStrict: "),fo(n,r)}}),Na=Re({minimumStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","minimumStrict"),r=_e(t,"b","minimumStrict");return a(n.shape,r.shape,"Error in minimumStrict: "),Go(n,r)}}),Fa=Re({modStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","modStrict"),r=_e(t,"b","modStrict");return a(n.shape,r.shape,"Error in modStrict: "),Vo(n,r)}}),Aa=Re({mulStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","mul"),r=_e(t,"b","mul");return a(n.shape,r.shape,"Error in multiplyStrict: "),Nn(n,r)}}),Ma=Re({powStrict_:function(e,t){return kn("strict variants of ops have been deprecated and will be removed in future"),a(e.shape,t.shape,"Error in powStrict: "),us(e,t)}}),Ta=Re({squaredDifferenceStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","squaredDifferenceStrict"),r=_e(t,"b","squaredDifferenceStrict");return a(n.shape,r.shape,"Error in squaredDifferenceStrict: "),ra(n,r)}}),$a=Re({subStrict_:function(e,t){kn("strict variants of ops have been deprecated and will be removed in future");const n=_e(e,"a","subStrict"),r=_e(t,"b","subStrict");return a(n.shape,r.shape,"Error in subStrict: "),Ao(n,r)}});const _a=Re({norm_:function(e,t="euclidean",n=null,r=!1){const o=function e(t,n,r=null){if(0===t.rank)return Fn(t);if(1!==t.rank&&null===r)return e(Rt(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Mo(Fn(t),r);if(n===1/0)return Fo(Fn(t),r);if(n===-1/0)return Ko(Fn(t),r);if("euclidean"===n||2===n)return na(Mo(us(Fn(t),mo(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Fo(Mo(Fn(t),r[0]),r[1]-1);if(n===1/0)return Fo(Mo(Fn(t),r[1]),r[0]);if(n===-1/0)return Ko(Mo(Fn(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return na(Mo(Ho(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=_e(e,"x","norm"),t,n);let s=o.shape;if(r){const t=f(n,e.shape);s=Rn(o.shape,t)}return Rt(o,s)}});const Ba=Re({movingAverage_:function(e,t,n,r,o=!0){const a=_e(e,"v","movingAverage"),i=_e(t,"x","movingAverage"),u=_e(n,"decay","movingAverage");ke(a,i),s(c(a.shape,i.shape),()=>"Shape mismatch in v and x");const l=mo(1),h=Ao(l,u);let p=Nn(Ao(i,a),h);if(o){s(null!=r,()=>"When using zeroDebias: true, step is required.");const e=_e(r,"step","movingAverage");p=In(p,Ao(l,us(u,e)))}return En(a,p)}});const Ra=Re({scatterND_:function(e,t,n){const r=_e(e,"indices","scatterND","int32"),o=_e(t,"updates","scatterND");jt(o,r,n);const s={indices:r,updates:o},a={shape:n};return Ie.runKernelFunc(e=>e.scatterND(r,o,n),s,null,"ScatterNd",a)}});const Ca=Re({sparseToDense_:function(e,t,n,r=0){const o=_e(e,"sparseIndices","sparseToDense","int32"),s=_e(t,"sparseValues","sparseToDense"),a=_e(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const o=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,s,n,a);const i={sparseIndices:o,sparseValues:s,defaultValue:a},u={outputShape:n};return Ie.runKernelFunc(e=>e.sparseToDense(o,s,n,a),i,null,"SparseToDense",u)}});const Pa=Re({gatherND_:function(e,t){const n=_e(t,"indices","gatherND","int32"),r=_e(e,"x","gatherND"),o={params:r,indices:n};return Ie.runKernelFunc(e=>e.gatherND(r,n),o,null,"GatherNd")}});const za=Re({dropout_:function(e,t,n,r){const o=_e(e,"x","dropout");if(s("float32"===o.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),s(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof ce?o.clone():o;const a=function(e,t){if(null==t)return e.shape.slice();if(c(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(o,n),i=1-t,u=In(ro(En(Is(a,0,1,"float32",r),i)),i);return Nn(o,u)}});function La(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function qa(e,t,n){const r=1-e%2,o=new Float32Array(e);for(let s=0;s<e;++s){const a=2*Math.PI*s/(e+r-1);o[s]=t-n*Math.cos(a)}return Ns(o,"float32")}const Oa=async function(e,t,n=1){const r=_e(e,"predictions","inTopK"),o=_e(t,"targets","inTopK");s(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),s(r.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`),a(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];s(n>0&&n<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`);const u=await r.data(),l=await o.data(),[c,h]=[u.length/i,i],p=g("bool",c);for(let e=0;e<c;e++){const t=e*h,r=u.subarray(t,t+h),o=[];for(let e=0;e<r.length;e++)o.push({value:r[e],index:e});o.sort((e,t)=>t.value-e.value),p[e]=0;for(let t=0;t<n;t++)if(o[t].index===l[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==o&&o.dispose(),ze(p,o.shape,"bool")};const Wa=Re({conv2DBackpropFilter_:function(e,t,n,r,o,a="NHWC",i){let u=e;3===e.rank&&(u=Rt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Rt(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s(4===u.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+u.shape+"."),s(4===l.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+l.shape+"."),s(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const c="NHWC"===a?u.shape[3]:u.shape[1],p="NHWC"===a?l.shape[3]:l.shape[1];s(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),s(p===n[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`),null!=i&&s(h(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const d={x:u,dy:l},f={strides:r,pad:o,dataFormat:a,dimRoundingMode:i,filterShape:n};return Ie.runKernelFunc(e=>{const t=sr(a),s=Yn(u.shape,n,r,1,o,i,!1,t);return e.conv2dDerFilter(u,l,s)},d,null,"Conv2DBackpropFilter",f)}});function Ka(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Nn(e,aa(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ga(e,t){let n=t;const r=Wr(e.shape,t.shape);return r.length>0&&(n=Mo(n,r)),Rt(n,e.shape)}function Ua(e,t,n){if("linear"===t)return e;if("relu"===t)return Ms(e);if("elu"===t)return Jr(e);if("relu6"===t)return Ts(e);if("prelu"===t)return ls(e,n);throw new Error(`Unknown fused activation ${t}.`)}const Va=(e,t)=>!(e>0)||"linear"===t;const Ha=Re({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:u,activation:l="linear",preluActivationWeights:c}){if(l=l||"linear",!1===Va(Ie.state.gradientDepth,l)){let s=Fr(e,t,n,r,o,a,i);return null!=u&&(s=En(s,u)),Ua(s,l,c)}const p=_e(e,"x","conv2d"),d=_e(t,"filter","conv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Rt(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s(4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+f.rank+"."),s(4===d.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+d.rank+"."),null!=i&&s(h(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),s(f.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${d.shape[2]}.`),s(or(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),s("NHWC"===o,()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);const g=Yn(f.shape,d.shape,n,a,r,i);let b,y;null!=u&&(b=_e(u,"bias","fused conv2d"),[b]=we(b,p),Kr(g.outShape,b.shape)),null!=c&&(y=_e(c,"prelu weights","fused conv2d"));const w=(e,t)=>{const[o,i,u,c]=t,h=Ka(e,u,l);s(rr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const p=[Mr(i.shape,h,o,n,r),Wa(i,h,o.shape,n,r)];if(null!=c){const e=Ga(c,h);p.push(e)}return p},k=e=>e.fusedConv2d({input:f,filter:d,convInfo:g,bias:b,activation:l,preluActivationWeights:y}),v={x:f,filter:d,bias:b,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i,activation:l};if(null==u){return So((e,t,n)=>{let r=Ie.runKernelFunc(k,v,null,"FusedConv2D",x);return n([t,e,r]),m&&(r=Rt(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(f,d)}return So((e,t,n,r)=>{let o=Ie.runKernelFunc(k,v,null,"FusedConv2D",x);return r([t,e,o,n]),m&&(o=Rt(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:w}})(f,d,b)}});const ja=Re({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,o,s=[1,1],a){let i=e;3===e.rank&&(i=Rt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Rt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:o,dimRoundingMode:a,dilations:s,filterShape:n};return Ie.runKernelFunc(t=>{const l=Yn(e.shape,n,r,s,o,a,!0);return t.depthwiseConv2DDerFilter(i,u,l)},l,null,"DepthwiseConv2dNativeBackpropFilter",c)}});const Ja=Re({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,o,s=[1,1],a){let i=t,u=!1;3===t.rank&&(u=!0,i=Rt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:o,dimRoundingMode:a,dilations:s,inputShape:e},h=Ie.runKernelFunc(t=>{const u=Yn(e,n.shape,r,s,o,a,!0);return t.depthwiseConv2DDerInput(i,n,u)},l,null,"DepthwiseConv2dNativeBackpropInput",c);return u?Rt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Ya=Re({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:u,activation:l="linear",preluActivationWeights:c}){if(!1===Va(Ie.state.gradientDepth,l)){let s=Lr(e,t,n,r,o,a,i);return null!=u&&(s=En(s,u)),Ua(s,l,c)}const p=_e(e,"x","depthwiseConv2d"),d=_e(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Rt(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),s(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),s(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),s(or(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&s(h(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const g=Yn(f.shape,d.shape,n,a,r,i,!0);let b,y;null!=u&&(b=_e(u,"bias","fused conv2d"),[b]=we(b,p),Kr(g.outShape,b.shape)),null!=c&&(y=_e(c,"prelu weights","fused depthwiseConv2d"));const w=(e,t)=>{s(rr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[o,u,c,h]=t,p=Ka(e,c,l),d=Ja(u.shape,p,o,n,r,a,i),f=ja(u,p,o.shape,n,r,a,i);if(null!=h){return[d,f,Ga(b,p)]}return[d,f]},k=e=>e.fusedDepthwiseConv2D({input:f,filter:d,convInfo:g,bias:b,activation:l,preluActivationWeights:y}),v={x:f,filter:d,bias:b,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i,activation:l};if(null==u){return So((e,t,n)=>{let r=Ie.runKernelFunc(k,v,null,"FusedDepthwiseConv2D",x);return n([t,e,r]),m&&(r=Rt(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(f,d)}return So((e,t,n,r)=>{let o=Ie.runKernelFunc(k,v,null,"FusedDepthwiseConv2D",x);return r([t,e,o,n]),m&&(o=Rt(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:w}})(f,d,b)}});const Za=Re({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:o,activation:a="linear",preluActivationWeights:i}){if(!1===Va(Ie.state.gradientDepth,a)){let s=Ct(e,t,n,r);return null!=o&&(s=En(s,o)),Ua(s,a,i)}let u=_e(e,"a","fused matMul"),h=_e(t,"b","fused matMul");[u,h]=we(u,h);const p=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?h.shape[h.rank-1]:h.shape[h.rank-2],f=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=r?h.shape[h.rank-2]:h.shape[h.rank-1],g=u.shape.slice(0,-2),b=h.shape.slice(0,-2),y=l(g),w=l(b);s(u.rank>=2&&h.rank>=2&&u.rank===h.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${h.rank}.`),s(c(g,b),()=>`Error in fused matMul: outer dimensions (${g}) and (${b}) of Tensors with shapes ${u.shape} and `+h.shape+" must match."),s(p===d,()=>`Error in fused matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${u.shape} and ${h.shape} and transposeA=${n} and transposeB=${r} must match.`);const k=u.shape.slice(0,-2).concat([f,m]),v=Rt(u,n?[y,p,f]:[y,f,p]),x=Rt(h,r?[w,m,d]:[w,d,m]);let S,E;null!=o&&(S=_e(o,"bias","fused matMul"),[S]=we(S,u),Kr(k,S.shape)),null!=i&&(E=_e(i,"prelu weights","fused matMul"));const D=(e,t)=>{const[s,i,u,l]=t,c=Ka(Rt(e,u.shape),u,a);let h,p;if(n||r?!n&&r?(h=Ct(c,i,!1,!1),p=Ct(c,s,!0,!1)):n&&!r?(h=Ct(i,c,!1,!0),p=Ct(s,c,!1,!1)):(h=Ct(i,c,!0,!0),p=Ct(c,s,!0,!0)):(h=Ct(c,i,!1,!0),p=Ct(s,c,!0,!1)),null!=o){return[h,p,Ga(l,c)]}return[h,p]},I=e=>e.fusedBatchMatMul({a:v,b:x,transposeA:n,transposeB:r,bias:S,activation:a,preluActivationWeights:E}),N={a:v,b:x,bias:S,preluActivationWeights:E},F={transposeA:n,transposeB:r,activation:a};if(null==o){return So((e,t,n)=>{const r=Ie.runKernelFunc(I,N,null,"_FusedMatMul",F);return n([e,t,r]),{value:Rt(r,k),gradFunc:D}})(v,x)}return So((e,t,n,r)=>{const o=Ie.runKernelFunc(I,N,null,"_FusedMatMul",F);return r([e,t,o,n]),{value:Rt(o,k),gradFunc:D}})(v,x,S)}});var Xa=Object.freeze({__proto__:null,conv2d:Ha,depthwiseConv2d:Ya,matMul:Za});const Qa=Re({hammingWindow_:function(e){return qa(e,.54,.46)}});const ei=Re({hannWindow_:function(e){return qa(e,.5,.5)}});const ti=Re({frame_:function(e,t,n,r=!1,o=0){let s=0;const a=[];for(;s+t<=e.size;)a.push(pr(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=cr([pr(e,s,t-r),no([r],o)]);a.push(i),s+=n}return 0===a.length?la([],[0,t]):Rt(cr(a),[a.length,t])}});const ni=Re({stft_:function(e,t,n,r,o=ei){null==r&&(r=La(t));const s=ti(e,t,n),a=Nn(s,o(t)),i=[];for(let e=0;e<s.shape[0];e++)i.push(ta(pr(a,[e,0],[1,t]),r));return cr(i)}});const ri=Re({cropAndResize_:function(e,t,n,r,o,a){const i=_e(e,"image","cropAndResize"),u=_e(t,"boxes","cropAndResize","float32"),l=_e(n,"boxInd","cropAndResize","int32");o=o||"bilinear",a=a||0;const c=u.shape[0];s(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),s(2===u.rank&&4===u.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${u.shape}.`),s(1===l.rank&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${u.shape}.`),s(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),s(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),s("bilinear"===o||"nearest"===o,()=>"method must be bilinear or nearest, but was "+o);const h={image:i,boxes:u,boxInd:l},p={method:o,extrapolationValue:a,cropSize:r};return Ie.runKernelFunc(e=>e.cropAndResize(i,u,l,r,o,a),h,null,"CropAndResize",p)}});const oi=Re({flipLeftRight_:function(e){const t=_e(e,"image","flipLeftRight","float32");s(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return Ie.runKernel("FlipLeftRight",n,{})}});const si=Re({rotateWithOffset_:function(e,t,n=0,r=.5){const o=_e(e,"image","rotateWithOffset","float32");s(4===o.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const a={image:o},i={radians:t,fillValue:n,center:r};return Ie.runKernel("RotateWithOffset",a,i)}});function ai(e,t,n,r,o,a){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),s(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),s(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),s(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),s(1===t.rank,()=>"scores must be a 1D tensor"),s(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),s(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:a}}const ii=Re({nonMaxSuppression_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const s=_e(e,"boxes","nonMaxSuppression"),a=_e(t,"scores","nonMaxSuppression"),i=ai(s,a,n,r,o);n=i.maxOutputSize,r=i.iouThreshold,o=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:o};return Ie.runKernelFunc(e=>e.nonMaxSuppression(s,a,n,r,o),{boxes:s,scores:a},null,"NonMaxSuppressionV3",u)}});function ui(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,o=e.length,s=0,a=!1;for(;r<o;){s=r+(o-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(o=s,a=!i)}return a?r:-r-1}(e,t,n||li)}(e,t,n),o=r<0?-(r+1):r;e.splice(o,0,t)}function li(e,t){return e>t?1:e<t?-1:0}function ci(e,t,n,r,o){return di(e,t,n,r,o,0).selectedIndices}function hi(e,t,n,r,o,s){return di(e,t,n,r,o,0,!1,s,!0)}function pi(e,t,n,r,o,s){return di(e,t,n,r,o,s,!0)}function di(e,t,n,r,o,s,a=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>o&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(gi);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:a}=t;if(n<o)break;let i=!1;for(let n=h.length-1;n>=a;--n){const a=fi(e,s,h[n]);if(a>=r){i=!0;break}if(t.score=t.score*mi(r,c,a),t.score<=o)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),p.push(t.score)):t.score>o&&ui(l,t,gi))}const d=h.length,f=n-d;i&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:Ns(h,"int32")};return a&&(m.selectedScores=Ns(p,"float32")),u&&(m.validOutputs=mo(d,"int32")),m}function fi(e,t,n){const r=e.subarray(4*t,4*t+4),o=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),p=Math.max(o[1],o[3]),d=(i-s)*(u-a),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(a,c),b=Math.min(i,h),y=Math.min(u,p),w=Math.max(b-m,0)*Math.max(y-g,0);return w/(d+f-w)}function mi(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function gi(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const bi=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const s=_e(e,"boxes","nonMaxSuppressionAsync"),a=_e(t,"scores","nonMaxSuppressionAsync"),i=ai(s,a,n,r,o);n=i.maxOutputSize,r=i.iouThreshold,o=i.scoreThreshold;const u=await Promise.all([s.data(),a.data()]),l=ci(u[0],u[1],n,r,o);return s!==e&&s.dispose(),a!==t&&a.dispose(),l};const yi=Re({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=0){const a=_e(e,"boxes","nonMaxSuppression"),i=_e(t,"scores","nonMaxSuppression"),u=ai(a,i,n,r,o,s),l={boxes:a,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:o=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=Ie.runKernel("NonMaxSuppressionV5",l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const wi=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=0){const a=_e(e,"boxes","nonMaxSuppressionAsync"),i=_e(t,"scores","nonMaxSuppressionAsync"),u=ai(a,i,n,r,o,s);n=u.maxOutputSize,r=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([a.data(),i.data()]),c=pi(l[0],l[1],n,r,o,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),c};const ki=Re({nonMaxSuppressionPadded_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){const a=_e(e,"boxes","nonMaxSuppression"),i=_e(t,"scores","nonMaxSuppression"),u=ai(a,i,n,r,o,null),l={boxes:a,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=Ie.runKernel("NonMaxSuppressionV4",l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const vi=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){const a=_e(e,"boxes","nonMaxSuppressionAsync"),i=_e(t,"scores","nonMaxSuppressionAsync"),u=ai(a,i,n,r,o,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([a.data(),i.data()]),f=hi(p,d,l,c,h,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),f};const xi=Re({resizeBilinear_:function(e,t,n=!1){const r=_e(e,"images","resizeBilinear");s(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),s(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+".");let o=r,a=!1;3===r.rank&&(a=!0,o=Rt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,u]=t,l={images:o},c={alignCorners:n,size:t},h=Ie.runKernelFunc((e,t)=>(t([o]),e.resizeBilinear(o,i,u,n)),l,null,"ResizeBilinear",c);return a?Rt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Si=Re({resizeNearestNeighbor_:function(e,t,n=!1){const r=_e(e,"images","resizeNearestNeighbor");s(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),s(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),s("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let o=r,a=!1;3===r.rank&&(a=!0,o=Rt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,u]=t,l={images:o},c={alignCorners:n,size:t},h=Ie.runKernelFunc((e,t)=>(t([o]),e.resizeNearestNeighbor(o,i,u,n)),l,null,"ResizeNearestNeighbor",c);return a?Rt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Ei=Re({bandPart_:function(e,t,n){s(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),s(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=_e(e,"a","bandPart");s(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const o=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const u=Rt(Fs(0,a,1,"int32"),[-1,1]),l=Fs(0,i,1,"int32"),c=Ao(u,l),h=_o(yo(c,mo(+t,"int32")),uo(c,mo(-n,"int32"))),p=qo([a,i],r.dtype);return Rt(sa(fa(Rt(r,[-1,a,i])).map(e=>Ur(h,e,p))),o)}});const Di=Re({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,s(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)s(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=ea(e,e.shape[0],0).map(e=>oa(e,[0]));s(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ie.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Nn(Mo(Nn(n[r],e)),n[r]);e=Ao(e,t)}return In(e,_a(e,"euclidean"))}));return t?sa(n,0):n}});function Ii(e,t=!1){return Ie.tidy(()=>{s(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let o=to(n),a=kt(e);const i=la([[1]],[1,1]);let u=kt(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,s=u,l=o;[u,a,o]=Ie.tidy(()=>{const t=pr(a,[e,e],[n-e,1]),s=_a(t),l=pr(a,[e,e],[1,1]),c=Ur(io(l,0),la([[-1]]),la([[1]])),h=Ao(l,Nn(c,s)),p=In(t,h);u=1===p.shape[0]?kt(i):cr([i,pr(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Do(In(Ct(c,h),s)),f=pr(a,[e,0],[n-e,r]),m=Nn(d,u),g=zt(u);if(0===e)a=Ao(f,Ct(m,Ct(g,f)));else{const t=Ao(f,Ct(m,Ct(g,f)));a=cr([pr(a,[0,0],[e,r]),t],0)}const b=zt(m),y=pr(o,[0,e],[n,o.shape[1]-e]);if(0===e)o=Ao(y,Ct(Ct(y,u),b));else{const t=Ao(y,Ct(Ct(y,u),b));o=cr([pr(o,[0,0],[n,e]),t],1)}return[u,a,o]}),xn([t,s,l])}return!t&&n>r&&(o=pr(o,[0,0],[n,r]),a=pr(a,[0,0],[r,r])),[o,a]})}const Ni=Re({qr_:function(e,t=!1){if(s(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Ii(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=fa(Rt(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],s=[];return r.forEach(e=>{const[n,r]=Ii(e,t);o.push(n),s.push(r)}),[Rt(sa(o,0),e.shape),Rt(sa(s,0),e.shape)]}}});var Fi;(Fi=e.Reduction||(e.Reduction={}))[Fi.NONE=0]="NONE",Fi[Fi.MEAN=1]="MEAN",Fi[Fi.SUM=2]="SUM",Fi[Fi.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Ai=Re({computeWeightedLoss_:function(t,n,r=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const o=_e(t,"losses","computeWeightedLoss");let s=null;null!=n&&(s=_e(n,"weights","computeWeightedLoss"));const a=null==s?o:Nn(o,s);if(r===e.Reduction.NONE)return a;if(r===e.Reduction.SUM)return Mo(a);if(r===e.Reduction.MEAN){if(null==s)return Wo(a);{const e=o.size/s.size,t=In(Mo(a),Mo(s));return e>1?In(t,mo(e)):t}}if(r===e.Reduction.SUM_BY_NONZERO_WEIGHTS){if(null==s)return In(Mo(a),mo(o.size));{const e=Nn(s,Oo(o.shape)),t=wt(Mo(Zo(e,mo(0))),"float32");return In(Mo(a),t)}}throw Error("Unknown reduction: "+r)}});const Mi=Re({absoluteDifference_:function(t,n,r,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const s=_e(t,"labels","absoluteDifference"),i=_e(n,"predictions","absoluteDifference");let u=null;null!=r&&(u=_e(r,"weights","absoluteDifference")),a(s.shape,i.shape,"Error in absoluteDifference: ");const l=Fn(Ao(s,i));return Ai(l,u,o)}});const Ti=Re({cosineDistance_:function(t,n,r,o,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const i=_e(t,"labels","cosineDistance"),u=_e(n,"predictions","cosineDistance");let l=null;null!=o&&(l=_e(o,"weights","cosineDistance")),a(i.shape,u.shape,"Error in cosineDistance: ");const c=mo(1),h=Ao(c,Mo(Nn(i,u),r,!0));return Ai(h,l,s)}});const $i=Re({hingeLoss_:function(t,n,r,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let s=_e(t,"labels","hingeLoss");const i=_e(n,"predictions","hingeLoss");let u=null;null!=r&&(u=_e(r,"weights","hingeLoss")),a(s.shape,i.shape,"Error in hingeLoss: ");const l=mo(1);s=Ao(Nn(mo(2),s),l);const c=Ms(Ao(l,Nn(s,i)));return Ai(c,u,o)}});const _i=Re({huberLoss_:function(t,n,r,o=1,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const i=_e(t,"labels","huberLoss"),u=_e(n,"predictions","huberLoss");let l=null;null!=r&&(l=_e(r,"weights","huberLoss")),a(i.shape,u.shape,"Error in huberLoss: ");const c=mo(o),h=Fn(Ao(u,i)),p=Go(h,c),d=Ao(h,p),f=En(Nn(mo(.5),Ho(p)),Nn(c,d));return Ai(f,l,s)}});const Bi=Re({logLoss_:function(t,n,r,o=1e-7,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const i=_e(t,"labels","logLoss"),u=_e(n,"predictions","logLoss");let l=null;null!=r&&(l=_e(r,"weights","logLoss")),a(i.shape,u.shape,"Error in logLoss: ");const c=mo(1),h=mo(o),p=Do(Nn(i,ko(En(u,h)))),d=Nn(Ao(c,i),ko(En(Ao(c,u),h))),f=Ao(p,d);return Ai(f,l,s)}});const Ri=Re({meanSquaredError_:function(t,n,r,o=e.Reduction.SUM_BY_NONZERO_WEIGHTS){const s=_e(t,"labels","meanSquaredError"),i=_e(n,"predictions","meanSquaredError");let u=null;null!=r&&(u=_e(r,"weights","meanSquaredError")),a(s.shape,i.shape,"Error in meanSquaredError: ");const l=ra(s,i);return Ai(l,u,o)}});const Ci=Re({sigmoidCrossEntropy_:function(t,n,r,o=0,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let i=_e(t,"multiClassLabels","sigmoidCrossEntropy");const u=_e(n,"logits","sigmoidCrossEntropy");let l=null;if(null!=r&&(l=_e(r,"weights","sigmoidCrossEntropy")),a(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),o>0){const e=mo(o),t=mo(1),n=mo(.5);i=En(Nn(i,Ao(t,e)),Nn(n,e))}const c=function(e,t){const n=_e(e,"labels","sigmoidCrossEntropyWithLogits"),r=_e(t,"logits","sigmoidCrossEntropyWithLogits");a(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=Ms(r),s=Nn(r,n),i=vo(Zr(Do(Fn(r))));return En(Ao(o,s),i)}(i,u);return Ai(c,l,s)}});const Pi=Re({softmaxCrossEntropy_:function(t,n,r,o=0,s=e.Reduction.SUM_BY_NONZERO_WEIGHTS){let i=_e(t,"onehotLabels","softmaxCrossEntropy");const u=_e(n,"logits","softmaxCrossEntropy");let l=null;if(null!=r&&(l=_e(r,"weights","softmaxCrossEntropy")),a(i.shape,u.shape,"Error in softmaxCrossEntropy: "),o>0){const e=mo(o),t=mo(1),n=mo(i.shape[1]);i=En(Nn(i,Ao(t,e)),In(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return So((e,t,r)=>{const o=$o(t,[n],!0),s=Ao(wt(t,"float32"),o);r([e,s]);const a=Do(Nn(s,e));return{value:Mo(a,[n]),gradFunc:(e,t)=>{const[r,o]=t,s=Rn(e.shape,[n]);return[Nn(Rt(e,s),Ao(wt(r,"float32"),Zr(o))),Nn(Rt(e,s),Ao(Zr(o),wt(r,"float32")))]}}})(e,t)}(i,u);return Ai(c,l,s)}}),zi={fft:Ys,ifft:Zs,rfft:ta,irfft:Xs},Li={hammingWindow:Qa,hannWindow:ei,frame:ti,stft:ni},qi={flipLeftRight:oi,resizeNearestNeighbor:Si,resizeBilinear:xi,rotateWithOffset:si,cropAndResize:ri,nonMaxSuppression:ii,nonMaxSuppressionAsync:bi,nonMaxSuppressionWithScore:yi,nonMaxSuppressionWithScoreAsync:wi,nonMaxSuppressionPadded:ki,nonMaxSuppressionPaddedAsync:vi},Oi={bandPart:Ei,gramSchmidt:Di,qr:Ni},Wi={absoluteDifference:Mi,computeWeightedLoss:Ai,cosineDistance:Ti,hingeLoss:$i,huberLoss:_i,logLoss:Bi,meanSquaredError:Ri,sigmoidCrossEntropy:Ci,softmaxCrossEntropy:Pi};class Ki extends pn{minimize(e,t=!1,n){const{value:r,grads:o}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:o[e.name]}));this.applyGradients(e)}else this.applyGradients(o);return xn(o),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return xo(e,t)}dispose(){null!=this.iterations_&&xn(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ki,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Gi extends Ki{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ie.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ie.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:vn(()=>Vr(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:vn(()=>Vr(r).variable(!1))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;vn(()=>{const e=En(Nn(s,this.rho),Nn(Ho(o),1-this.rho)),t=Nn(In(na(En(a,this.epsilon)),na(En(s,this.epsilon))),o),n=En(Nn(a,this.rho),Nn(Ho(t),1-this.rho));s.assign(e),a.assign(n);const i=En(Nn(t,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(xn(this.accumulatedGrads.map(e=>e.variable)),xn(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Gi.className="Adadelta",fn(Gi);class Ui extends Ki{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ie.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:vn(()=>no(r.shape,this.initialAccumulatorValue).variable(e))}}const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable;vn(()=>{const e=En(s,Ho(o));s.assign(e);const t=En(Nn(In(o,na(En(e,Ie.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&xn(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Ui.className="Adagrad",fn(Ui);class Vi extends Ki{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],vn(()=>{this.accBeta1=mo(t).variable(),this.accBeta2=mo(n).variable()}),null==r&&(this.epsilon=Ie.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);vn(()=>{const n=Ao(1,this.accBeta1),r=Ao(1,this.accBeta2);t.forEach((t,o)=>{const s=Ie.registeredVariables[t];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:t+"/m",variable:vn(()=>Vr(s).variable(!1))}),null==this.accumulatedSecondMoment[o]&&(this.accumulatedSecondMoment[o]={originalName:t+"/v",variable:vn(()=>Vr(s).variable(!1))});const a=Array.isArray(e)?e[o].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[o].variable,u=this.accumulatedSecondMoment[o].variable,l=En(Nn(i,this.beta1),Nn(a,1-this.beta1)),c=En(Nn(u,this.beta2),Nn(Ho(a),1-this.beta2)),h=In(l,n),p=In(c,r);i.assign(l),u.assign(c);const d=En(Nn(In(h,En(na(p),this.epsilon)),-this.learningRate),s);s.assign(d)}),this.accBeta1.assign(Nn(this.accBeta1,this.beta1)),this.accBeta2.assign(Nn(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&xn(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&xn(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),vn(()=>{this.accBeta1.assign(us(this.beta1,this.iterations_+1)),this.accBeta2.assign(us(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Vi.className="Adam",fn(Vi);class Hi extends Ki{constructor(e,t,n,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],vn(()=>{this.iteration=mo(0).variable(),this.accBeta1=mo(t).variable()}),null==r&&(this.epsilon=Ie.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);vn(()=>{const n=Ao(1,this.accBeta1),r=In(-this.learningRate,En(Nn(this.iteration,this.decay),1));t.forEach((t,o)=>{const s=Ie.registeredVariables[t];null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:t+"/m",variable:Vr(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[o]&&(this.accumulatedWeightedInfNorm[o]={originalName:t+"/v",variable:Vr(s).variable(!1)});const a=Array.isArray(e)?e[o].tensor:e[t];if(null==a)return;const i=this.accumulatedFirstMoment[o].variable,u=this.accumulatedWeightedInfNorm[o].variable,l=En(Nn(i,this.beta1),Nn(a,1-this.beta1)),c=Nn(u,this.beta2),h=Fn(a),p=fo(c,h);i.assign(l),u.assign(p);const d=En(Nn(In(r,n),In(l,En(p,this.epsilon))),s);s.assign(d)}),this.iteration.assign(En(this.iteration,1)),this.accBeta1.assign(Nn(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&xn(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&xn(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Hi.className="Adamax",fn(Hi);class ji extends Ki{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=Ie.registeredVariables[t];vn(()=>{const e=En(Nn(this.c,r),o);o.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Sn(mo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ji.className="SGD",fn(ji);class Ji extends ji{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ie.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:vn(()=>Vr(r).variable(e))}}const o=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&vn(()=>{let e;const t=En(Nn(this.m,o),s);e=this.useNesterov?En(Nn(this.c,En(s,Nn(t,this.m))),r):En(Nn(this.c,t),r),o.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&xn(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ji.className="Momentum",fn(Ji);class Yi extends Ki{constructor(e,t=.9,n=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=Ie.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ie.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:vn(()=>Vr(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:vn(()=>Vr(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:vn(()=>Vr(r).variable(!1))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;vn(()=>{const e=En(Nn(s,this.decay),Nn(Ho(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=En(Nn(t,this.decay),Nn(o,1-this.decay)),u=In(Nn(o,this.learningRate),na(Ao(e,En(Ho(i),this.epsilon)))),l=En(Nn(a,this.momentum),u);s.assign(e),t.assign(i),a.assign(l);const c=Ao(r,l);r.assign(c)}else{const e=En(Nn(s,this.decay),Nn(Ho(o),1-this.decay)),t=En(Nn(a,this.momentum),In(Nn(o,this.learningRate),na(En(e,this.epsilon))));s.assign(e),a.assign(t);const n=Ao(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&xn(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&xn(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&xn(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Yi.className="RMSProp",fn(Yi);class Zi{static sgd(e){return new ji(e)}static momentum(e,t,n=!1){return new Ji(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,o=!1){return new Yi(e,t,n,r,o)}static adam(e=.001,t=.9,n=.999,r=null){return new Vi(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Gi(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,o=0){return new Hi(e,t,n,r,o)}static adagrad(e,t=.1){return new Ui(e,t)}}const Xi={sgd:Zi.sgd,momentum:Zi.momentum,adadelta:Zi.adadelta,adagrad:Zi.adagrad,rmsprop:Zi.rmsprop,adamax:Zi.adamax,adam:Zi.adam},Qi="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();var eu=Object.freeze({__proto__:null,slice_util:hn,segment_util:so,castTensor:function(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=qo(e.shape),r=wt(e,"float32"),o=n.complex(r,t);return t.dispose(),r.dispose(),o}if(!k(e.dtype,t))return Ie.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),o=wt(r,t);return r.dispose(),o}if("int32"===t)return n.int(e);if("bool"===t){const t=mo(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)},reshapeTensor:function(e,t){return Ie.makeTensorFromDataId(e.dataId,t,e.dtype)},linspaceImpl:function(e,t,n){const r=(t-e)/(n-1),o=_(n,"float32");o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+r;return Ns(o,"float32")},upcastType:ye,axesAreInnerMostDims:$n,combineLocations:_n,computeOutAndReduceShapes:Bn,expandShapeToKeepDim:Rn,assertAxesAreInnerMostDims:function(e,t,n){s($n(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)},getAxesPermutation:Cn,getUndoAxesPermutation:Pn,getInnerMostAxes:zn,getBroadcastDims:function(e,t){const n=e.length,r=[];for(let o=0;o<n;o++){const s=n-1-o,a=e[s]||1;(t[t.length-1-o]||1)>1&&1===a&&r.unshift(s)}return r},getReductionAxes:Wr,assertAndGetBroadcastShape:Kr,assertParamsConsistent:ur,computeOutShape:lr,computeDilation2DInfo:function(e,t,n,r,o="NHWC",s){return Yn(e,[...t,e[3]],n,s,r,null,null,sr(o))},computePool2DInfo:jn,computePool3DInfo:Jn,computeConv2DInfo:Yn,computeConv3DInfo:Zn,computeDefaultPad:Xn,tupleValuesAreOne:rr,eitherStridesOrDilationsAreOne:or,convertConv2DDataFormat:sr,getFusedDyActivation:Ka,getFusedBiasGradient:Ga,applyActivation:Ua,shouldFuse:Va,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:function(e){return e<=30?e:A(e,Math.floor(Math.sqrt(e)))},getImageCenter:function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]},getReshaped:function(e,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)o=o.concat([e[r+1]/t[r],t[r]]);o=o.concat(e.slice(n+1))}return o},getPermuted:function(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],o=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?o.push(r):n.push(r);r.push(...n),r.push(0),r.push(...o)}return r},getReshapedPermuted:function(e,t,n,r=!0){const o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?o.push(t[n-1]*e[n]):o.push(e[n]/t[n-1]):o.push(e[n]);return o},getSliceBeginCoords:function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n},getSliceSize:function(e,t,n){const r=e.slice(0,1);for(let o=0;o<n;++o)r.push(e[o+1]-t[o][0]-t[o][1]);return r},prepareAndValidate:Ut,validateUpdateShape:Ht,validateInput:jt,calculateShapes:Jt,SELU_SCALEALPHA:1.7580993408473768,SELU_SCALE:1.0507009873554805,ERF_P:.3275911,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,warn:function(...e){P().getBool("IS_TEST")||console.warn(...e)},log:function(...e){P().getBool("IS_TEST")||console.log(...e)},mergeRealAndImagArrays:function(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n},splitRealAndImagArrays:function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}},complexWithEvenIndex:function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},complexWithOddIndex:function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},getComplexWithIndex:function(e,t){return{real:e[2*t],imag:e[2*t+1]}},assignToTypedArray:function(e,t,n,r){e[2*r]=t,e[2*r+1]=n},exponents:function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let o=0;o<Math.ceil(e/2);o++){const s=(t?2:-2)*Math.PI*(o/e);n[o]=Math.cos(s),r[o]=Math.sin(s)}return{real:n,imag:r}},exponent:function(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}},prepareSplitSize:Qs});var tu=Object.freeze({__proto__:null,nonMaxSuppressionV3Impl:ci,nonMaxSuppressionV4Impl:hi,nonMaxSuppressionV5Impl:pi,split:function(e,t,n){const r=new Array(e.rank).fill(0),o=e.shape.slice();return t.map(t=>{const s=[...o];s[n]=t;const a=pr(e,r,s);return r[n]+=t,a})},tile:function(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=yt(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),o=new Array(e.rank);for(let t=0;t<o.length;t++)o[t]=n[t]%e.shape[t];const s=e.locToIndex(o);r.values[t]=e.values[s]}return r.toTensor()},topkImpl:function(e,t,n,r,o){const s=t[t.length-1],[a,i]=[e.length/s,s],u=g(n,a*r),l=g("int32",a*r);for(let t=0;t<a;t++){const n=t*i,o=e.subarray(n,n+i),s=[];for(let e=0;e<o.length;e++)s.push({value:o[e],index:e});s.sort((e,t)=>t.value-e.value);const a=t*r,c=u.subarray(a,a+r),h=l.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=s[e].value,h[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[ze(u,c,n),ze(l,c,"int32")]},whereImpl:ma});const nu={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,aa(wt(n,"float32"),-1))}}},ru={kernelName:"Acos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ho(wt(n,"float32")),r=na(Ao(mo(1),t));return Do(In(e,r))}}}},ou={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=na(Ao(Ho(wt(n,"float32")),1));return In(e,t)}}}},su={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{let t=e;const r=Wr(n.shape,o);return r.length>0&&(t=Mo(t,r)),Rt(t,n.shape)},b:()=>{let t=e;const n=Wr(r.shape,o);return n.length>0&&(t=Mo(t,n)),Rt(t,r.shape)}}}},au={kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},iu={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(n)}}},uu={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(n)}}},lu={kernelName:"Asin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,na(Ao(mo(1),Ho(wt(n,"float32")))))}}},cu={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=na(En(mo(1),Ho(wt(n,"float32"))));return In(e,t)}}}},hu={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{const t=En(Ho(n),Ho(r));let s=Nn(e,In(r,t));const a=Wr(n.shape,o);return a.length>0&&(s=Mo(s,a)),Rt(s,n.shape)},b:()=>{const t=En(Ho(n),Ho(r));let s=Do(Nn(e,In(n,t)));const a=Wr(r.shape,o);return a.length>0&&(s=Mo(s,a)),Rt(s,r.shape)}}}},pu={kernelName:"Atan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,En(Ho(wt(n,"float32")),1))}}},du={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,Ao(mo(1),Ho(wt(n,"float32"))))}}};const fu=Re({avgPool3dBackprop_:function(e,t,n,r,o=[1,1,1],a,i){const u=_e(e,"dy","avgPool3dBackprop"),l=_e(t,"input","avgPool3dBackprop");let c=u,p=l,d=!1;4===l.rank&&(d=!0,c=Rt(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Rt(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),s(5===c.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+c.rank+"."),s(5===p.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+p.rank+"."),s(or(r,o),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`),null!=i&&s(h(a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const f={dy:c,input:p},m={filterSize:n,strides:r,dilations:o,pad:a,dimRoundingMode:i},g=Ie.runKernelFunc(e=>{const t=Jn(p.shape,n,r,o,a,i);return e.avgPool3dBackprop(c,p,t)},f,null,"AvgPool3DBackprop",m);return d?Rt(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),mu={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:s,dilations:a,pad:i,dimRoundingMode:u}=n,l=null==a?[1,1,1]:a;return{x:()=>fu(e,r,o,s,l,i,u)}}};const gu=Re({avgPoolBackprop_:function(e,t,n,r,o){const a=_e(e,"dy","avgPoolBackprop"),i=_e(t,"input","avgPoolBackprop");s(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let u=i,l=a,c=!1;3===i.rank&&(c=!0,u=Rt(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Rt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),s(4===l.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."),s(4===u.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+".");const h={dy:l,input:u},p={filterSize:n,strides:r,pad:o},d=Ie.runKernelFunc(e=>{const t=jn(u.shape,n,r,1,o);return e.avgPoolBackprop(l,u,t)},h,null,"AvgPoolBackprop",p);return c?Rt(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),bu={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:s,pad:a}=n;return{x:()=>gu(e,r,o,s,a)}}},yu={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,o]=t,{transposeA:s,transposeB:a}=n;return s||a?!s&&a?{a:()=>Ct(e,o,!1,!1),b:()=>Ct(e,r,!0,!1)}:s&&!a?{a:()=>Ct(o,e,!1,!0),b:()=>Ct(r,e,!1,!1)}:{a:()=>Ct(o,e,!0,!0),b:()=>Ct(e,r,!0,!0)}:{a:()=>Ct(e,o,!1,!0),b:()=>Ct(r,e,!0,!1)}}},wu={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>as(e,r,o)}}},ku={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,o=r.inputShape,s=r.shape,a=Array.from(s);for(let e=o.length-1;e>=0;e--)if(o[e]===s[e])a[e]=1;else if(1!==o[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);const i=[];for(let e=0;e<a.length;e++)a[e]>1&&i.push(e);return{x:()=>Mo(e,i,!0)}}},vu={kernelName:"Cast",gradFunc:e=>({x:()=>e.clone()})},xu={kernelName:"Ceil",gradFunc:e=>({x:()=>Vr(e)})},Su={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:s}=n;return{x:()=>Ur(_o(uo(r,o),yo(r,s)),e,Vr(e))}}},Eu={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:o}=n,s=f(o,t[0].shape)[0],a=r.map(e=>e[s]);return ea(e,a,s).map(e=>()=>e)}},Du={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{dilations:a,strides:i,pad:u,dataFormat:l}=n;return s(rr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Mr(r.shape,e,o,i,u,l),filter:()=>Wa(r,e,o.shape,i,u,l)}}},Iu={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{strides:s,pad:a,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Fr(e,o,s,a,i,1,u),filter:()=>Wa(e,r,o.shape,s,a,i,u)}}};const Nu=Re({conv3DBackpropFilter_:function(e,t,n,r,o){let a=e;4===e.rank&&(a=Rt(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Rt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),s(5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),s(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),s(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),s(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),s(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const u={x:a,dy:i},l={strides:r,pad:o,filterShape:n};return Ie.runKernelFunc(e=>{const t=Zn(a.shape,n,r,1,o);return e.conv3dDerFilter(a,i,t)},u,null,"Conv3DBackpropFilterV2",l)}}),Fu={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:a}=n;s(rr(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,u]=t;return{x:()=>_r(i.shape,e,u,o,a),filter:()=>Nu(i,e,u.shape,o,a)}}},Au={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(Do(Ks(wt(n,"float32"))),e)}}},Mu={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(Gs(wt(n,"float32")),e)}}},Tu={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o,exclusive:s,reverse:a}=n;return{x:()=>{const t=Cn([o],r.rank);let n=Pr(e,o,s,!a);return null!=t&&(n=zt(n,t)),n}}}},$u={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:a,dimRoundingMode:i}=n,u=null==r?[1,1]:r;s(rr(u),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${u}'`);const[l,c]=t;return s(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),s(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),s(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s(or(o,u),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${u}'.`),null!=i&&s(h(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),{x:()=>Ja(l.shape,e,c,o,a,r,i),filter:()=>ja(l,e,c.shape,o,a,r,i)}}},_u={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,s={x:r,filter:o,dy:e},a={x:r,filter:o,dy:e};return{x:()=>Ie.runKernel("Dilation2DBackpropInput",s,n),filter:()=>Ie.runKernel("Dilation2DBackpropFilter",a,n)}}},Bu={kernelName:"Div",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{const t=In(e,wt(r,"float32")),s=Wr(n.shape,o);return s.length>0?Rt(Mo(t,s),n.shape):t},b:()=>{let t=Nn(e,wt(n,"float32"));const s=Wr(r.shape,o);s.length>0&&(t=Rt(Mo(t,s),r.shape));const a=Ho(r);return Do(In(t,wt(a,"float32")))}}}},Ru={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),o={dy:e,y:n};return{x:()=>Ie.runKernelFunc(r,o,null,"EluGrad")}}},Cu={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Nn(Zr(Do(Ho(n))),2/Math.sqrt(Math.PI));return{x:()=>Nn(e,r)}}},Pu={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,n)}}},zu={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,Zr(n))}}},Lu={kernelName:"Floor",gradFunc:e=>({x:()=>Vr(e)})},qu={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{const t=In(e,wt(r,"float32")),s=Wr(n.shape,o);return s.length>0?Rt(Mo(t,s),n.shape):t},b:()=>{let t=Nn(e,wt(n,"float32"));const s=Wr(r.shape,o);s.length>0&&(t=Rt(Mo(t,s),r.shape));const a=Ho(r);return Do(In(t,wt(a,"float32")))}}}},Ou={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[o,s,a,i]=t,u=null==i?mo(1):i,l=Wr(s.shape,o.shape),c=[];if(1===s.rank){for(let e=0;e<o.shape.length-1;++e)c.push(o.shape[e]);c.push(1)}const h=Ao(o,s),p=Nn(e,u),d=zs(En(a,mo(r))),f=Nn(Nn(Nn(d,d),d),mo(-.5));return{x:()=>1===s.rank?Rt(Nn(Nn(e,eo(Rt(d,[1,1,1,s.shape[0]]),c)),u),o.shape):Rt(Nn(Nn(e,d),u),o.shape),mean:()=>{let e=Nn(Nn(d,mo(-1)),p);return 1===s.rank&&(e=Mo(e,l)),Rt(e,s.shape)},variance:()=>{let e=Nn(Nn(f,h),p);return 1===s.rank&&(e=Mo(e,l)),Rt(e,s.shape)},scale:()=>{const t=Nn(h,d);let n=Nn(e,t);return 1===s.rank&&(n=Mo(n,l)),Rt(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Mo(t,l)),Rt(t,s.shape)}}}},Wu={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,o]=t,{axis:s}=n,a=f(s,r.shape)[0];return{x:()=>{const t=r.shape,n=o.size,i=t.slice(0,a),u=i.length,l=t.slice(s,t.length).slice(1),c=l.length,h=Ku(0,u),p=Ku(u+1,u+1+c),d=Gu([i,[n],l]),f=Rt(e,d),m=Rt(o,[n]),g=Gu([[u],h,p]),b=zt(f,g);let y=da(b,m,r.shape[a]);const w=Pn(g);return y=zt(y,w),y},indices:()=>o}}};function Ku(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Gu(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Uu={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Vr(n),b:()=>Vr(r)}}},Vu={kernelName:"Identity",gradFunc:e=>({x:()=>wt(e,"float32")})},Hu={kernelName:"IsFinite",gradFunc:e=>({x:()=>Vr(e)})},ju={kernelName:"IsInf",gradFunc:e=>({x:()=>Vr(e)})},Ju={kernelName:"IsNan",gradFunc:e=>({x:()=>Vr(e)})},Yu={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,En(n,1))}}},Zu={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,wt(n,"float32"))}}},Xu={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const t=Zr(r);return Ao(e,Nn(Mo(e,o,!0),t))}}}};const Qu=Re({localResponseNormalizationBackprop_:function(e,t,n,r=5,o=1,s=1,a=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:o,alpha:s,beta:a};return Ie.runKernelFunc(i=>i.LRNGrad(n,e,t,r,o,s,a),i,null,"LRNBackprop",u)}}),el={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{depthRadius:s,bias:a,alpha:i,beta:u}=n;return{x:()=>Qu(r,o,e,s,a,i,u)}}};function tl(e,t,n,r){return t.rank<n.rank&&(t=Rt(t,Rn(t.shape,r))),e.rank<n.rank&&(e=Rt(e,Rn(e.shape,r))),{x:()=>Nn(e,wt(Gr(n,t),e.dtype))}}const nl={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:o}=r,s=t[0],a=tl(e,t[1],s,f(o,s.shape));return{x:()=>a.x()}}},rl={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Nn(e,wt(uo(n,r),"float32")),b:()=>Nn(e,wt(bo(n,r),"float32"))}}};const ol=Re({maxPool3dBackprop_:function(e,t,n,r,o,a=[1,1,1],i,u){const l=_e(e,"dy","maxPool3dBackprop"),c=_e(t,"input","maxPool3dBackprop"),p=_e(n,"output","maxPool3dBackprop");let d=l,f=c,m=p,g=!1;4===c.rank&&(g=!0,d=Rt(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=Rt(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),m=Rt(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s(5===d.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+d.rank+"."),s(5===f.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+f.rank+"."),s(5===m.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+m.rank+"."),s(or(o,a),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${o} and dilations '${a}'`),null!=u&&s(h(i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${u} but got pad ${i}.`);const b={dy:d,input:f,output:m},y={filterSize:r,strides:o,dilations:a,pad:i,dimRoundingMode:u},w=Ie.runKernelFunc(e=>{const t=Jn(f.shape,r,o,a,i,u);return e.maxPool3dBackprop(d,f,m,t)},b,null,"MaxPool3DBackprop",y);return g?Rt(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}}),sl={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:s,strides:a,dilations:i,pad:u,dimRoundingMode:l}=n,c=null==i?[1,1,1]:i;return{x:()=>ol(e,r,o,s,a,c,u,l)}}};const al=Re({maxPoolBackprop_:function(e,t,n,r,o,a,i){const u=_e(e,"dy","maxPoolBackprop"),l=_e(t,"input","maxPoolBackprop"),c=_e(n,"output","maxPoolBackprop");s(l.rank===u.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${u.rank})`),s(4===u.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),s(4===l.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."),null!=i&&s(h(a),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const p={dy:u,input:l,output:c},d={filterSize:r,strides:o,pad:a,dimRoundingMode:i};return Ie.runKernelFunc(e=>{const t=jn(l.shape,r,o,1,a,i);return e.maxPoolBackprop(u,l,c,t)},p,null,"MaxPoolBackprop",d)}}),il={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,s=o.map(e=>e[0]);return{x:()=>pr(e,s,r.shape)}}},ul={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>mr(e,r,o)}}},ll={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>cr(e,r)}}};const cl=[nu,ru,ou,su,au,iu,uu,lu,cu,hu,pu,du,mu,bu,yu,wu,ku,vu,xu,Su,Eu,Iu,Du,Fu,Au,Mu,Tu,$u,_u,Bu,Ru,Cu,Pu,zu,qu,Lu,Ou,Wu,Uu,Vu,Hu,ju,Ju,Yu,Zu,Xu,el,nl,nl,rl,sl,{kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>al(e,r,o,s,a,i)}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:o}=r,[s,a]=t,i=tl(e,a,s,f(o,s.shape));return{x:()=>i.x()}}},{kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Nn(e,wt(yo(n,r),"float32")),b:()=>Nn(e,wt(io(n,r),"float32"))}}},{kernelName:"MirrorPad",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,s=o.map(e=>e[0]);return{x:()=>pr(e,s,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{const t=Wr(n.shape,o);return t.length>0?Rt(Mo(e,t),n.shape):e},b:()=>{const t=Nn(e,Do(ro(In(n,r)))),s=Wr(r.shape,o);return s.length>0?Rt(Mo(t,s),r.shape):t}}}},{kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{const t=Nn(e,wt(r,"float32")),s=Wr(n.shape,o);return s.length>0?Rt(Mo(t,s),n.shape):t},b:()=>{const t=Nn(e,wt(n,"float32")),s=Wr(r.shape,o);return s.length>0?Rt(Mo(t,s),r.shape):t}}}},{kernelName:"Negate",gradFunc:e=>({x:()=>Do(e)})},{kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>qo(n.shape,"float32")}}},{kernelName:"OnesLike",gradFunc:e=>({x:()=>Vr(e)})},il,il,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,o]=t,s=n,a=r,i=Kr(s.shape,a.shape);return{a:()=>{const t=wt(a,"float32");let n=Nn(e,Nn(t,us(s,Ao(t,mo(1)))));const r=Wr(s.shape,i);return r.length>0&&(n=Mo(n,r)),Rt(n,s.shape)},b:()=>{const t=io(s,0),n=Ur(t,ko(s),Vr(s));let r=Nn(e,Nn(o,n));const u=Wr(a.shape,i);return u.length>0&&(r=Mo(r,u)),Rt(r,a.shape)}}}},{kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,o=io(n,0);return{x:()=>Ur(o,e,Nn(e,r)),alpha:()=>{let t=Ur(o,Vr(e),Nn(e,n));const s=Wr(r.shape,e.shape);return s.length>0&&(t=Mo(t,s)),Rt(t,r.shape)}}}},{kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,Do(Ho(n)))}}},{kernelName:"Relu6",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Nn(yo(n,6),aa(n));return{x:()=>Nn(e,wt(r,"float32"))}}},{kernelName:"Relu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,wt(aa(n),"float32"))}}},{kernelName:"Reshape",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Rt(e,n.shape)}}},{kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o=t=>{const{alignCorners:o}=n;return t.resizeBilinearBackprop(e,r,o)},s={images:r};return{images:()=>Ie.runKernelFunc(o,s,null,"ResizeBilinearGrad",n)}}},{kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o=t=>{const{alignCorners:o}=n;return t.resizeNearestNeighborBackprop(e,r,o)},s={images:r};return{images:()=>Ie.runKernelFunc(o,s,null,"ResizeNearestNeighborGrad",n)}}},{kernelName:"Reverse",gradFunc:(e,t,n)=>{const{dims:r}=n,o=f(r,e.shape);return{x:()=>$s(e,o)}}},{kernelName:"Round",gradFunc:e=>({x:()=>Vr(e)})},{kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(In(e,Nn(us(n,1.5),2)))}}},{kernelName:"SelectV2",inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>wt(Vr(n),"float32"),t:()=>Nn(e,wt(n,e.dtype)),e:()=>Nn(e,wt(Bo(n),e.dtype))}}},{kernelName:"Selu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=io(n,mo(0)),r=mo(1.7580993408473768),o=mo(1.0507009873554805),s=Nn(e,o),a=Nn(Nn(e,r),Zr(wt(n,"float32")));return Ur(t,s,a)}}}},{kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,Nn(n,Ao(mo(1),n)))}}},{kernelName:"Sign",gradFunc:e=>({x:()=>Vr(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(Rr(wt(n,"float32")),e)}}},{kernelName:"Sinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(Cr(wt(n,"float32")),e)}}},{kernelName:"Slice",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:o,size:s}=n,a=r.shape,[i,u]=cn(r,o,s),l=[];for(let t=0;t<e.rank;t++)l.push([i[t],a[t]-i[t]-u[t]]);return{x:()=>ts(e,l)}}},{kernelName:"Softmax",outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:o}=n,s=Nn(e,r);return{logits:()=>Ao(s,Nn(Mo(s,[o],!0),r))}}},{kernelName:"Softplus",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,hr(n))}}},ul,ul,ll,ll,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,Nn(na(wt(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=mo(2);return{a:()=>Nn(e,Nn(o,Ao(n,r))),b:()=>Nn(e,Nn(o,Ao(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(e,Nn(wt(n,"float32"),2))}}},{kernelName:"Step",gradFunc:e=>({x:()=>Vr(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,o=Kr(n.shape,r.shape);return{a:()=>{let t=e;const r=Wr(n.shape,o);return r.length>0&&(t=Mo(t,r)),Rt(t,n.shape)},b:()=>{let t=e;const n=Wr(r.shape,o);return n.length>0&&(t=Mo(t,n)),Rt(Do(t),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:s}=n;f(s,r.shape).forEach(e=>{o[e]=1});const a=Rt(e,o),i=Nn(a,Oo(r.shape,"float32"));return{x:()=>i}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>In(e,Ho(Rr(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(Ao(mo(1),Ho(n)),e)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let t=Vr(r);if(1===r.rank)for(let n=0;n<o[0];++n)t=En(t,pr(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<o[0];++n)for(let s=0;s<o[1];++s)t=En(t,pr(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<o[0];++n)for(let s=0;s<o[1];++s)for(let a=0;a<o[2];++a)t=En(t,pr(e,[n*r.shape[0],s*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<o[0];++n)for(let s=0;s<o[1];++s)for(let a=0;a<o[2];++a)for(let i=0;i<o[3];++i)t=En(t,pr(e,[n*r.shape[0],s*r.shape[1],a*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:o}=r,s=Pn(o);return{x:()=>zt(e,s)}}},{kernelName:"Unpack",gradFunc:(e,t,n)=>{const r=n,{axis:o}=r;return{value:()=>sa(e,o)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=fo(t,Vr(t)),r=ao(e,n);let o=uo(t,mo(0,"int32"));const s=r.rank-o.rank;for(let e=0;e<s;++e)o=Xr(o,e+1);o=_o(o,Oo(r.shape,"bool"));const a=Vr(r);return Ur(o,r,a)}(e,n)}}},{kernelName:"ZerosLike",gradFunc:e=>({x:()=>Vr(e)})}];for(const e of cl)H(e);ce.prototype.abs=function(){return this.throwIfDisposed(),Fn(this)},ce.prototype.acos=function(){return this.throwIfDisposed(),An(this)},ce.prototype.acosh=function(){return this.throwIfDisposed(),Mn(this)},ce.prototype.addStrict=function(e){return this.throwIfDisposed(),Ea(this,e)},ce.prototype.add=function(e){return this.throwIfDisposed(),En(this,e)},ce.prototype.all=function(e,t){return this.throwIfDisposed(),Ln(this,e,t)},ce.prototype.any=function(e,t){return this.throwIfDisposed(),qn(this,e,t)},ce.prototype.argMax=function(e){return this.throwIfDisposed(),On(this,e)},ce.prototype.argMin=function(e){return this.throwIfDisposed(),Wn(this,e)},ce.prototype.asScalar=function(){return this.throwIfDisposed(),s(1===this.size,()=>"The array must have only 1 element."),Rt(this,[])},ce.prototype.asType=function(e){return this.throwIfDisposed(),wt(this,e)},ce.prototype.as1D=function(){return this.throwIfDisposed(),Rt(this,[this.size])},ce.prototype.as2D=function(e,t){return this.throwIfDisposed(),Rt(this,[e,t])},ce.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Rt(this,[e,t,n])},ce.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Rt(this,[e,t,n,r])},ce.prototype.as5D=function(e,t,n,r,o){return this.throwIfDisposed(),Rt(this,[e,t,n,r,o])},ce.prototype.asin=function(){return this.throwIfDisposed(),Kn(this)},ce.prototype.asinh=function(){return this.throwIfDisposed(),Gn(this)},ce.prototype.atan=function(){return this.throwIfDisposed(),Un(this)},ce.prototype.atan2=function(e){return this.throwIfDisposed(),Vn(this,e)},ce.prototype.atanh=function(){return this.throwIfDisposed(),Hn(this)},ce.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ar(this,e,t,n,r)},ce.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),mr(this,e,t)},ce.prototype.batchNorm=function(e,t,n,r,o){return this.throwIfDisposed(),br(this,e,t,n,r,o)},ce.prototype.broadcastTo=function(e){return this.throwIfDisposed(),vr(this,e)},ce.prototype.cast=function(e){return this.throwIfDisposed(),wt(this,e)},ce.prototype.ceil=function(){return this.throwIfDisposed(),xr(this)},ce.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Sr(this,e,t)},ce.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ce&&(e=[e]),cr([this,...e],t)},ce.prototype.conv1d=function(e,t,n,r,o,s){return this.throwIfDisposed(),Ar(this,e,t,n,r,o,s)},ce.prototype.conv2dTranspose=function(e,t,n,r,o){return this.throwIfDisposed(),Tr(this,e,t,n,r,o)},ce.prototype.conv2d=function(e,t,n,r,o,s){return this.throwIfDisposed(),Fr(this,e,t,n,r,o,s)},ce.prototype.cos=function(){return this.throwIfDisposed(),Rr(this)},ce.prototype.cosh=function(){return this.throwIfDisposed(),Cr(this)},ce.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Pr(this,e,t,n)},ce.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),zr(this,e,t)},ce.prototype.depthwiseConv2D=function(e,t,n,r,o,s){return kn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Lr(this,e,t,n,r,o,s)},ce.prototype.depthwiseConv2d=function(e,t,n,r,o,s){return this.throwIfDisposed(),Lr(this,e,t,n,r,o,s)},ce.prototype.dilation2d=function(e,t,n,r,o){return this.throwIfDisposed(),Or(this,e,t,n,r,o)},ce.prototype.divNoNan=function(e){return this.throwIfDisposed(),Hr(this,e)},ce.prototype.divStrict=function(e){return this.throwIfDisposed(),Da(this,e)},ce.prototype.div=function(e){return this.throwIfDisposed(),In(this,e)},ce.prototype.dot=function(e){return this.throwIfDisposed(),jr(this,e)},ce.prototype.elu=function(){return this.throwIfDisposed(),Jr(this)},ce.prototype.equalStrict=function(e){return this.throwIfDisposed(),ya(this,e)},ce.prototype.equal=function(e){return this.throwIfDisposed(),Gr(this,e)},ce.prototype.erf=function(){return this.throwIfDisposed(),Yr(this)},ce.prototype.exp=function(){return this.throwIfDisposed(),Zr(this)},ce.prototype.expandDims=function(e){return this.throwIfDisposed(),Xr(this,e)},ce.prototype.expm1=function(){return this.throwIfDisposed(),Qr(this)},ce.prototype.fft=function(){return this.throwIfDisposed(),Ys(this)},ce.prototype.flatten=function(){return this.throwIfDisposed(),Rt(this,[this.size])},ce.prototype.floor=function(){return this.throwIfDisposed(),ro(this)},ce.prototype.floorDiv=function(e){return this.throwIfDisposed(),Dn(this,e)},ce.prototype.gather=function(e,t){return this.throwIfDisposed(),ao(this,e,t)},ce.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),wa(this,e)},ce.prototype.greaterEqual=function(e){return this.throwIfDisposed(),uo(this,e)},ce.prototype.greaterStrict=function(e){return this.throwIfDisposed(),ka(this,e)},ce.prototype.greater=function(e){return this.throwIfDisposed(),io(this,e)},ce.prototype.ifft=function(){return this.throwIfDisposed(),Zs(this)},ce.prototype.irfft=function(){return this.throwIfDisposed(),Xs(this)},ce.prototype.isFinite=function(){return this.throwIfDisposed(),co(this)},ce.prototype.isInf=function(){return this.throwIfDisposed(),ho(this)},ce.prototype.isNaN=function(){return this.throwIfDisposed(),po(this)},ce.prototype.leakyRelu=function(e){return this.throwIfDisposed(),go(this,e)},ce.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),va(this,e)},ce.prototype.lessEqual=function(e){return this.throwIfDisposed(),yo(this,e)},ce.prototype.lessStrict=function(e){return this.throwIfDisposed(),xa(this,e)},ce.prototype.less=function(e){return this.throwIfDisposed(),bo(this,e)},ce.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),wo(this,e,t,n,r)},ce.prototype.logSigmoid=function(){return this.throwIfDisposed(),No(this)},ce.prototype.logSoftmax=function(e){return this.throwIfDisposed(),To(this,e)},ce.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),$o(this,e,t)},ce.prototype.log=function(){return this.throwIfDisposed(),ko(this)},ce.prototype.log1p=function(){return this.throwIfDisposed(),vo(this)},ce.prototype.logicalAnd=function(e){return this.throwIfDisposed(),_o(this,e)},ce.prototype.logicalNot=function(){return this.throwIfDisposed(),Bo(this)},ce.prototype.logicalOr=function(e){return this.throwIfDisposed(),Ro(this,e)},ce.prototype.logicalXor=function(e){return this.throwIfDisposed(),Co(this,e)},ce.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ct(this,e,t,n)},ce.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Po(this,e,t,n,r)},ce.prototype.max=function(e,t){return this.throwIfDisposed(),Fo(this,e,t)},ce.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Ia(this,e)},ce.prototype.maximum=function(e){return this.throwIfDisposed(),fo(this,e)},ce.prototype.mean=function(e,t){return this.throwIfDisposed(),Wo(this,e,t)},ce.prototype.min=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)},ce.prototype.minimumStrict=function(e){return this.throwIfDisposed(),Na(this,e)},ce.prototype.minimum=function(e){return this.throwIfDisposed(),Go(this,e)},ce.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Uo(this,e,t)},ce.prototype.modStrict=function(e){return this.throwIfDisposed(),Fa(this,e)},ce.prototype.mod=function(e){return this.throwIfDisposed(),Vo(this,e)},ce.prototype.mulStrict=function(e){return this.throwIfDisposed(),Aa(this,e)},ce.prototype.mul=function(e){return this.throwIfDisposed(),Nn(this,e)},ce.prototype.neg=function(){return this.throwIfDisposed(),Do(this)},ce.prototype.norm=function(e,t,n){return this.throwIfDisposed(),_a(this,e,t,n)},ce.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Sa(this,e)},ce.prototype.notEqual=function(e){return this.throwIfDisposed(),Zo(this,e)},ce.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Pt(this,e,t,n)},ce.prototype.onesLike=function(){return this.throwIfDisposed(),Qo(this)},ce.prototype.pad=function(e,t){return this.throwIfDisposed(),ts(this,e,t)},ce.prototype.pool=function(e,t,n,r,o){return this.throwIfDisposed(),is(this,e,t,n,r,o)},ce.prototype.powStrict=function(e){return this.throwIfDisposed(),Ma(this,e)},ce.prototype.pow=function(e){return this.throwIfDisposed(),us(this,e)},ce.prototype.prelu=function(e){return this.throwIfDisposed(),ls(this,e)},ce.prototype.prod=function(e,t){return this.throwIfDisposed(),cs(this,e,t)},ce.prototype.reciprocal=function(){return this.throwIfDisposed(),As(this)},ce.prototype.relu=function(){return this.throwIfDisposed(),Ms(this)},ce.prototype.relu6=function(){return this.throwIfDisposed(),Ts(this)},ce.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Rt(this,e.shape)},ce.prototype.reshape=function(e){return this.throwIfDisposed(),Rt(this,e)},ce.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),xi(this,e,t)},ce.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),Si(this,e,t)},ce.prototype.reverse=function(e){return this.throwIfDisposed(),$s(this,e)},ce.prototype.rfft=function(){return this.throwIfDisposed(),ta(this)},ce.prototype.round=function(){return this.throwIfDisposed(),Ps(this)},ce.prototype.rsqrt=function(){return this.throwIfDisposed(),zs(this)},ce.prototype.selu=function(){return this.throwIfDisposed(),Ls(this)},ce.prototype.separableConv2d=function(e,t,n,r,o,s){return this.throwIfDisposed(),qs(this,e,t,n,r,o,s)},ce.prototype.sigmoid=function(){return this.throwIfDisposed(),hr(this)},ce.prototype.sign=function(){return this.throwIfDisposed(),Ws(this)},ce.prototype.sin=function(){return this.throwIfDisposed(),Ks(this)},ce.prototype.sinh=function(){return this.throwIfDisposed(),Gs(this)},ce.prototype.slice=function(e,t){return this.throwIfDisposed(),pr(this,e,t)},ce.prototype.softmax=function(e){return this.throwIfDisposed(),Js(this,e)},ce.prototype.softplus=function(){return this.throwIfDisposed(),Io(this)},ce.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),as(this,e,t)},ce.prototype.split=function(e,t){return this.throwIfDisposed(),ea(this,e,t)},ce.prototype.sqrt=function(){return this.throwIfDisposed(),na(this)},ce.prototype.square=function(){return this.throwIfDisposed(),Ho(this)},ce.prototype.squaredDifference=function(e){return this.throwIfDisposed(),ra(this,e)},ce.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Ta(this,e)},ce.prototype.squeeze=function(e){return this.throwIfDisposed(),oa(this,e)},ce.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ce?[this,e]:[this,...e];return sa(n,t)},ce.prototype.step=function(e){return this.throwIfDisposed(),aa(this,e)},ce.prototype.stridedSlice=function(e,t,n,r,o,s,a,i){return this.throwIfDisposed(),ia(this,e,t,n,r,o,s,a,i)},ce.prototype.subStrict=function(e){return this.throwIfDisposed(),$a(this,e)},ce.prototype.sub=function(e){return this.throwIfDisposed(),Ao(this,e)},ce.prototype.sum=function(e,t){return this.throwIfDisposed(),Mo(this,e,t)},ce.prototype.tan=function(){return this.throwIfDisposed(),ua(this)},ce.prototype.tanh=function(){return this.throwIfDisposed(),dr(this)},ce.prototype.tile=function(e){return this.throwIfDisposed(),eo(this,e)},ce.prototype.toBool=function(){return this.throwIfDisposed(),wt(this,"bool")},ce.prototype.toFloat=function(){return this.throwIfDisposed(),wt(this,"float32")},ce.prototype.toInt=function(){return this.throwIfDisposed(),wt(this,"int32")},ce.prototype.topk=function(e,t){return this.throwIfDisposed(),ca(this,e,t)},ce.prototype.transpose=function(e){return this.throwIfDisposed(),zt(this,e)},ce.prototype.unique=function(e){return this.throwIfDisposed(),pa(this,e)},ce.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),da(this,e,t)},ce.prototype.unstack=function(e){return this.throwIfDisposed(),fa(this,e)},ce.prototype.where=function(e,t){return this.throwIfDisposed(),Ur(e,this,t)},ce.prototype.zerosLike=function(){return this.throwIfDisposed(),Vr(this)},e.Abs="Abs",e.Acos="Acos",e.Acosh="Acosh",e.AdadeltaOptimizer=Gi,e.AdagradOptimizer=Ui,e.AdamOptimizer=Vi,e.AdamaxOptimizer=Hi,e.Add="Add",e.AddN="AddN",e.All="All",e.Any="Any",e.ArgMax="ArgMax",e.ArgMin="ArgMin",e.Asin="Asin",e.Asinh="Asinh",e.Atan="Atan",e.Atan2="Atan2",e.Atanh="Atanh",e.AvgPool="AvgPool",e.AvgPool3D="AvgPool3D",e.AvgPool3DBackprop="AvgPool3DBackprop",e.AvgPoolBackprop="AvgPoolBackprop",e.BatchMatMul="BatchMatMul",e.BatchToSpaceND="BatchToSpaceND",e.BroadcastTo="BroadcastTo",e.Cast="Cast",e.Ceil="Ceil",e.ClipByValue="ClipByValue",e.Complex="Complex",e.Concat="Concat",e.Conv2D="Conv2D",e.Conv2DBackpropFilter="Conv2DBackpropFilter",e.Conv2DBackpropInput="Conv2DBackpropInput",e.Conv3D="Conv3D",e.Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",e.Conv3DBackpropInputV2="Conv3DBackpropInputV2",e.Cos="Cos",e.Cosh="Cosh",e.CropAndResize="CropAndResize",e.Cumsum="Cumsum",e.DataStorage=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},e.DepthToSpace="DepthToSpace",e.DepthwiseConv2dNative="DepthwiseConv2dNative",e.DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",e.DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",e.Diag="Diag",e.Dilation2D="Dilation2D",e.Dilation2DBackpropFilter="Dilation2DBackpropFilter",e.Dilation2DBackpropInput="Dilation2DBackpropInput",e.Div="Div",e.Elu="Elu",e.EluGrad="EluGrad",e.Environment=C,e.Equal="Equal",e.Erf="Erf",e.Exp="Exp",e.Expm1="Expm1",e.FFT="FFT",e.Fill="Fill",e.FlipLeftRight="FlipLeftRight",e.Floor="Floor",e.FloorDiv="FloorDiv",e.FromPixels="FromPixels",e.FusedBatchNorm="FusedBatchNorm",e.FusedConv2D="FusedConv2D",e.FusedDepthwiseConv2D="FusedDepthwiseConv2D",e.GatherNd="GatherNd",e.GatherV2="GatherV2",e.Greater="Greater",e.GreaterEqual="GreaterEqual",e.IFFT="IFFT",e.Identity="Identity",e.Imag="Imag",e.IsFinite="IsFinite",e.IsInf="IsInf",e.IsNan="IsNan",e.KernelBackend=t,e.LRN="LRN",e.LRNBackprop="LRNBackprop",e.Less="Less",e.LessEqual="LessEqual",e.LinSpace="LinSpace",e.Log="Log",e.Log1p="Log1p",e.LogSoftmax="LogSoftmax",e.LogicalAnd="LogicalAnd",e.LogicalNot="LogicalNot",e.LogicalOr="LogicalOr",e.Max="Max",e.MaxPool="MaxPool",e.MaxPool3D="MaxPool3D",e.MaxPool3DBackprop="MaxPool3DBackprop",e.MaxPoolBackprop="MaxPoolBackprop",e.MaxPoolWithArgmax="MaxPoolWithArgmax",e.Maximum="Maximum",e.Mean="Mean",e.Min="Min",e.Minimum="Minimum",e.MirrorPad="MirrorPad",e.Mod="Mod",e.MomentumOptimizer=Ji,e.Multiply="Multiply",e.Negate="Negate",e.NonMaxSuppressionV3="NonMaxSuppressionV3",e.NonMaxSuppressionV4="NonMaxSuppressionV4",e.NonMaxSuppressionV5="NonMaxSuppressionV5",e.NotEqual="NotEqual",e.OP_SCOPE_SUFFIX="__op",e.OneHot="OneHot",e.OnesLike="OnesLike",e.Optimizer=Ki,e.PadV2="PadV2",e.Pool="Pool",e.Pow="Pow",e.Prelu="Prelu",e.Prod="Prod",e.RMSPropOptimizer=Yi,e.Range="Range",e.Real="Real",e.Reciprocal="Reciprocal",e.Relu="Relu",e.Relu6="Relu6",e.Reshape="Reshape",e.ResizeBilinear="ResizeBilinear",e.ResizeBilinearGrad="ResizeBilinearGrad",e.ResizeNearestNeighbor="ResizeNearestNeighbor",e.ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",e.Reverse="Reverse",e.RotateWithOffset="RotateWithOffset",e.Round="Round",e.Rsqrt="Rsqrt",e.SGDOptimizer=ji,e.ScatterNd="ScatterNd",e.SelectV2="SelectV2",e.Selu="Selu",e.Sigmoid="Sigmoid",e.Sign="Sign",e.Sin="Sin",e.Sinh="Sinh",e.Slice="Slice",e.Softmax="Softmax",e.Softplus="Softplus",e.SpaceToBatchND="SpaceToBatchND",e.SparseToDense="SparseToDense",e.SplitV="SplitV",e.Sqrt="Sqrt",e.Square="Square",e.SquaredDifference="SquaredDifference",e.Step="Step",e.StridedSlice="StridedSlice",e.Sub="Sub",e.Sum="Sum",e.Tan="Tan",e.Tanh="Tanh",e.Tensor=ce,e.TensorBuffer=ie,e.Tile="Tile",e.TopK="TopK",e.Transpose="Transpose",e.Unique="Unique",e.Unpack="Unpack",e.UnsortedSegmentSum="UnsortedSegmentSum",e.Variable=he,e.ZerosLike="ZerosLike",e._FusedMatMul="_FusedMatMul",e.abs=Fn,e.acos=An,e.acosh=Mn,e.add=En,e.addN=Tn,e.addStrict=Ea,e.all=Ln,e.any=qn,e.argMax=On,e.argMin=Wn,e.asin=Kn,e.asinh=Gn,e.atan=Un,e.atan2=Vn,e.atanh=Hn,e.avgPool=ar,e.avgPool3d=ir,e.backend=function(){return Ie.backend},e.backend_util=eu,e.basicLSTMCell=fr,e.batchNorm=br,e.batchNorm2d=yr,e.batchNorm3d=wr,e.batchNorm4d=kr,e.batchToSpaceND=mr,e.booleanMaskAsync=ba,e.broadcastTo=vr,e.browser=Gt,e.buffer=yt,e.cast=wt,e.ceil=xr,e.clipByValue=Sr,e.clone=kt,e.complex=Ce,e.concat=cr,e.concat1d=Er,e.concat2d=Dr,e.concat3d=Ir,e.concat4d=Nr,e.conv1d=Ar,e.conv2d=Fr,e.conv2dTranspose=Tr,e.conv3d=$r,e.conv3dTranspose=Br,e.copyRegisteredKernels=function(e,t){U(e).forEach(e=>{V(Object.assign({},e,{backendName:t}))})},e.cos=Rr,e.cosh=Cr,e.cosineWindow=qa,e.cumsum=Pr,e.customGrad=So,e.deprecationWarn=kn,e.depthToSpace=zr,e.depthwiseConv2d=Lr,e.device_util=Ae,e.diag=qr,e.dilation2d=Or,e.disableDeprecationWarnings=function(){P().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")},e.dispose=xn,e.disposeVariables=function(){Ie.disposeVariables()},e.div=In,e.divNoNan=Hr,e.divStrict=Da,e.dot=jr,e.dropout=za,e.elu=Jr,e.enableDebugMode=function(){P().set("DEBUG",!0)},e.enableProdMode=function(){P().set("PROD",!0)},e.enclosingPowerOfTwo=La,e.engine=function(){return Ie},e.env=P,e.equal=Gr,e.equalStrict=ya,e.erf=Yr,e.exp=Zr,e.expandDims=Xr,e.expm1=Qr,e.eye=to,e.fft=Ys,e.fill=no,e.findBackend=function(e){return Ie.findBackend(e)},e.findBackendFactory=function(e){return Ie.findBackendFactory(e)},e.floor=ro,e.floorDiv=Dn,e.fused=Xa,e.gather=ao,e.gatherND=Pa,e.gather_util=Vt,e.getBackend=function(){return Ie.backendName},e.getGradient=G,e.getKernel=K,e.getKernelsForBackend=U,e.grad=function(e){return s(F(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=_e(t,"x","tf.grad",null),o=null!=n?_e(n,"dy","tf.grad"):null;return Ie.tidy(()=>{const{value:t,grads:n}=Ie.gradients(()=>e(r),[r],o);return null!=o&&a(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Eo(n),n[0]})}},e.grads=function(e){return s(F(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{s(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Be(t,"args","tf.grads",null),o=null!=n?_e(n,"dy","tf.grads"):null;return Ie.tidy(()=>{const{value:t,grads:n}=Ie.gradients(()=>e(...r),r,o);return null!=o&&a(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Eo(n),n})}},e.greater=io,e.greaterEqual=uo,e.greaterEqualStrict=wa,e.greaterStrict=ka,e.ifft=Zs,e.imag=lo,e.image=qi,e.inTopKAsync=Oa,e.io=Bt,e.irfft=Xs,e.isFinite=co,e.isInf=ho,e.isNaN=po,e.keep=Sn,e.kernel_impls=tu,e.leakyRelu=go,e.less=bo,e.lessEqual=yo,e.lessEqualStrict=va,e.lessStrict=xa,e.linalg=Oi,e.linspace=function(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Ie.runKernelFunc(r=>r.linspace(e,t,n),{},null,"LinSpace",r)},e.localResponseNormalization=wo,e.log=ko,e.log1p=vo,e.logSigmoid=No,e.logSoftmax=To,e.logSumExp=$o,e.logicalAnd=_o,e.logicalNot=Bo,e.logicalOr=Ro,e.logicalXor=Co,e.losses=Wi,e.matMul=Ct,e.math=qt,e.max=Fo,e.maxPool=Po,e.maxPool3d=zo,e.maxPoolWithArgmax=Lo,e.maximum=fo,e.maximumStrict=Ia,e.mean=Wo,e.memory=function(){return Ie.memory()},e.min=Ko,e.minimum=Go,e.minimumStrict=Na,e.mirrorPad=Uo,e.mod=Vo,e.modStrict=Fa,e.moments=jo,e.movingAverage=Ba,e.mul=Nn,e.mulStrict=Aa,e.multiRNNCell=Jo,e.multinomial=Yo,e.neg=Do,e.nextFrame=function(){return new Promise(e=>Qi(()=>e()))},e.norm=_a,e.notEqual=Zo,e.notEqualStrict=Sa,e.oneHot=Pt,e.ones=Oo,e.onesLike=Qo,e.op=Re,e.outerProduct=es,e.pad=ts,e.pad1d=ns,e.pad2d=rs,e.pad3d=os,e.pad4d=ss,e.pool=is,e.pow=us,e.powStrict=Ma,e.prelu=ls,e.print=vt,e.prod=cs,e.profile=function(e){return Ie.profile(e)},e.rand=hs,e.randomGamma=Es,e.randomNormal=Ds,e.randomUniform=Is,e.range=Fs,e.ready=function(){return Ie.ready()},e.real=Xo,e.reciprocal=As,e.registerBackend=function(e,t,n=1){return Ie.registerBackend(e,t,n)},e.registerGradient=H,e.registerKernel=V,e.relu=Ms,e.relu6=Ts,e.removeBackend=function(e){Ie.removeBackend(e)},e.reshape=Rt,e.reverse=$s,e.reverse1d=_s,e.reverse2d=Bs,e.reverse3d=Rs,e.reverse4d=Cs,e.rfft=ta,e.round=Ps,e.rsqrt=zs,e.scalar=mo,e.scatterND=Ra,e.scatter_util=Yt,e.selu=Ls,e.separableConv2d=qs,e.serialization=mn,e.setBackend=function(e){return Ie.setBackend(e)},e.setPlatform=function(e,t){P().setPlatform(e,t)},e.setdiff1dAsync=Os,e.sigmoid=hr,e.sign=Ws,e.signal=Li,e.sin=Ks,e.sinh=Gs,e.slice=pr,e.slice1d=Us,e.slice2d=Vs,e.slice3d=Hs,e.slice4d=js,e.slice_util=hn,e.softmax=Js,e.softplus=Io,e.spaceToBatchND=as,e.sparseToDense=Ca,e.spectral=zi,e.split=ea,e.sqrt=na,e.square=Ho,e.squaredDifference=ra,e.squaredDifferenceStrict=Ta,e.squeeze=oa,e.stack=sa,e.step=aa,e.stridedSlice=ia,e.sub=Ao,e.subStrict=$a,e.sum=Mo,e.sumOutType=function(e){return ye(e,"int32")},e.tan=ua,e.tanh=dr,e.tensor=ze,e.tensor1d=Ns,e.tensor2d=la,e.tensor3d=Ot,e.tensor4d=function(e,t,n){if(i(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Te(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Pe(e,t,r,n)},e.tensor5d=function(e,t,n){if(i(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Te(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Pe(e,t,r,n)},e.tensor6d=function(e,t,n){if(i(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Te(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Pe(e,t=t||r,r,n)},e.tensor_util=xe,e.test_util=wn,e.tidy=vn,e.tile=eo,e.time=function(e){return Ie.time(e)},e.topk=ca,e.train=Xi,e.transpose=zt,e.truncatedNormal=ha,e.unique=pa,e.unregisterGradient=function(e){if(!W.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);W.delete(e)},e.unregisterKernel=function(e,t){const n=j(e,t);if(!O.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);O.delete(n)},e.unsortedSegmentSum=da,e.unstack=fa,e.upcastType=ye,e.util=Q,e.valueAndGrad=function(e){return s(F(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{s(t instanceof ce,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),s(null==n||n instanceof ce,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:o}=Ie.gradients(()=>e(t),[t],n);return Eo(r),{grad:r[0],value:o}}},e.valueAndGrads=function(e){return s(F(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{s(Array.isArray(t)&&t.every(e=>e instanceof ce),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),s(null==n||n instanceof ce,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=Ie.gradients(()=>e(...t),t,n);return null!=n&&a(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Eo(r.grads),r}},e.variable=function(e,t=!0,n,r){return Ie.makeVariable(e,t,n,r)},e.variableGrads=xo,e.version_core="2.7.0",e.where=Ur,e.whereAsync=ga,e.zeros=qo,e.zerosLike=Vr,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tf-core.es2017.min.js.map
